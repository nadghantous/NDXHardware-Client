{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js\";\nimport React, { Component } from 'react';\nimport { retrievePCConfigurations } from '../actions/actions';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport pcsActions from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\n\nclass NDXSoftwareDropDown extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (this.props.collectionName === \"processor\") {\n        let CPU = event.target.value;\n        console.log(CPU);\n        this.props.history.push(\"/addpcconfigurations\", {\n          CPU: CPU\n        });\n      }\n    };\n\n    this.state = {\n      DropDownComp: [],\n      CPU: '',\n      GPU: '',\n      RAM: '',\n      Storage: '',\n      Motherboard: '',\n      PSU: '',\n      totalprice: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadInfo();\n  }\n\n  async loadInfo() {\n    if (this.props.collectionName === \"continents\") {\n      let response = await this.props.dispatch(continentsActions.retrieveContinents());\n      this.setState({\n        response\n      });\n      let data_array = this.props.continents;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }\n        }, item.name));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"processor\") {\n      let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.processors;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.setState({\n            CPU: item.Proc_Name + \" \" + item.Proc_Freq\n          });\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Proc_Name + \" \" + item.Proc_Freq,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 35\n          }\n        }, item.Proc_Name, \"  \", item.Proc_Freq, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"graphics_card\") {\n      let data_array = this.props.data;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Grap_Name + item.Grap_Memory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 35\n          }\n        }, item.Grap_Name, \"  \", item.Grap_Memory, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"memory\") {\n      let data_array = this.props.data;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.RAM_Name + item.RAM_Storage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 35\n          }\n        }, item.RAM_Name, \"  \", item.RAM_Storage, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"storage\") {\n      let data_array = this.props.data;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Stor_Name + item.Stor_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 35\n          }\n        }, item.Stor_Name, \"  \", item.Stor_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"motherboard\") {\n      let data_array = this.props.data;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Moth_Name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }\n        }, item.Moth_Name, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"power_supply\") {\n      let data_array = this.props.data;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Pow_Name + item.Pow_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }\n        }, item.Pow_Name, \"  \", item.Pow_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      style: {\n        backgroundColor: '#0eff00',\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, this.state.DropDownComp));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  continents: state.continentReducer.continents,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus\n});\n\nexport default connect(mapStateToProps)(NDXSoftwareDropDown);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js"],"names":["React","Component","retrievePCConfigurations","Link","pcsActions","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","connect","continentsActions","NDXSoftwareDropDown","constructor","handleChange","event","props","collectionName","CPU","target","value","console","log","history","push","state","DropDownComp","GPU","RAM","Storage","Motherboard","PSU","totalprice","componentDidMount","loadInfo","response","dispatch","retrieveContinents","setState","data_array","continents","i","length","item","backgroundColor","color","id","name","retrieveCPUS","processors","Proc_Name","Proc_Freq","Price","data","Grap_Name","Grap_Memory","RAM_Name","RAM_Storage","Stor_Name","Stor_Capacity","Moth_Name","Pow_Name","Pow_Capacity","render","mapStateToProps","continentReducer","cpuReducer","graphicscards","gpuReducer","rams","ramReducer","storages","storageReducer","motherboards","motherboardReducer","psus","psuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {retrievePCConfigurations} from '../actions/actions';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport pcsActions  from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\nclass NDXSoftwareDropDown extends Component{\n    constructor(){\n        super();\n        this.state = {\n            DropDownComp:[],\n            CPU:'',\n            GPU:'',\n            RAM:'',\n            Storage:'',\n            Motherboard:'',\n            PSU:'',\n            totalprice:''\n        }\n\n    }\n    componentDidMount(){\n        \n        this.loadInfo();\n    }\n    async loadInfo () {\n        if(this.props.collectionName === \"continents\"){\n            let response = await this.props.dispatch(continentsActions.retrieveContinents());\n        this.setState({response});\n            let data_array = this.props.continents;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.id}>{item.name}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"processor\"){\n            let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n            this.setState({response});\n            let data_array = this.props.processors;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.setState({CPU: item.Proc_Name + \" \"+ item.Proc_Freq});\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Proc_Name + \" \"+ item.Proc_Freq}>{item.Proc_Name}  {item.Proc_Freq}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"graphics_card\"){\n            let data_array = this.props.data;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Grap_Name + item.Grap_Memory}>{item.Grap_Name}  {item.Grap_Memory}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"memory\"){\n            let data_array = this.props.data;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.RAM_Name + item.RAM_Storage}>{item.RAM_Name}  {item.RAM_Storage}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"storage\"){\n            let data_array = this.props.data;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Stor_Name + item.Stor_Capacity}>{item.Stor_Name}  {item.Stor_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            let data_array = this.props.data;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Moth_Name}>{item.Moth_Name}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            let data_array = this.props.data;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Pow_Name + item.Pow_Capacity}>{item.Pow_Name}  {item.Pow_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n\n        \n    }\n    handleChange = (event) => {\n        if(this.props.collectionName === \"processor\"){\n            let CPU = event.target.value;\n            console.log(CPU);\n            this.props.history.push(\"/addpcconfigurations\",{\n                CPU: CPU\n            })\n        }\n        \n      };\n\n    render(){\n\n        return(\n        <div className=\"form-group\">\n        <select onChange={this.handleChange} style={{backgroundColor:'#0eff00',color:'black'}}>{this.state.DropDownComp}</select>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    continents: state.continentReducer.continents,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n  })\n  \n  export default connect(mapStateToProps)(NDXSoftwareDropDown);\n"]},"metadata":{},"sourceType":"module"}