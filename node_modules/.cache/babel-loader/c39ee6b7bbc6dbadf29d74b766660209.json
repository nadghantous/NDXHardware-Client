{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js\";\nimport React, { Component } from 'react';\nimport { retrievePCConfigurations } from '../actions/actions';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport pcsActions from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\n\nclass NDXSoftwareDropDown extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (this.props.collectionName === \"processor\") {\n        console.log(this.CPU);\n        this.CPU = event.target.value;\n        console.log(this.CPU);\n        let price = event.target.id;\n        console.log(price);\n        this.props.history.push(\"/addpcconfigurations\", {\n          CPU: this.CPU\n        });\n      }\n    };\n\n    this.state = {\n      DropDownComp: [],\n      CPU: '',\n      GPU: '',\n      RAM: '',\n      Storage: '',\n      Motherboard: '',\n      PSU: '',\n      totalprice: ''\n    };\n    this.CPU = '';\n  }\n\n  componentDidMount() {\n    this.loadInfo();\n  }\n\n  async loadInfo() {\n    if (this.props.collectionName === \"continents\") {\n      let response = await this.props.dispatch(continentsActions.retrieveContinents());\n      this.setState({\n        response\n      });\n      let data_array = this.props.continents;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 35\n          }\n        }, item.name));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"processor\") {\n      let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.processors;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.CPU = item.Proc_Name + \" \" + item.Proc_Freq;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Proc_Name + \" \" + item.Proc_Freq,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 35\n          }\n        }, item.Proc_Name, \"  \", item.Proc_Freq, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"graphics_card\") {\n      let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.graphicscards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Grap_Name + item.Grap_Memory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 35\n          }\n        }, item.Grap_Name, \"  \", item.Grap_Memory, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"memory\") {\n      let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.rams;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.RAM_Name + item.RAM_Storage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 35\n          }\n        }, item.RAM_Name, \"  \", item.RAM_Storage, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"storage\") {\n      let response = await this.props.dispatch(storagesActions.retrieveStorages());\n      this.setState({\n        response\n      });\n      let data_array = this.props.storages;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Stor_Name + item.Stor_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 35\n          }\n        }, item.Stor_Name, \"  \", item.Stor_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"motherboard\") {\n      let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n      this.setState({\n        response\n      });\n      let data_array = this.props.motherboards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Moth_Name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 35\n          }\n        }, item.Moth_Name, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"power_supply\") {\n      let response = await this.props.dispatch(psusActions.retrievePSUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.psus;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Pow_Name + item.Pow_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 35\n          }\n        }, item.Pow_Name, \"  \", item.Pow_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      style: {\n        backgroundColor: '#0eff00',\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, this.state.DropDownComp));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  continents: state.continentReducer.continents,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus\n});\n\nexport default connect(mapStateToProps)(NDXSoftwareDropDown);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js"],"names":["React","Component","retrievePCConfigurations","Link","pcsActions","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","connect","continentsActions","NDXSoftwareDropDown","constructor","handleChange","event","props","collectionName","console","log","CPU","target","value","price","id","history","push","state","DropDownComp","GPU","RAM","Storage","Motherboard","PSU","totalprice","componentDidMount","loadInfo","response","dispatch","retrieveContinents","setState","data_array","continents","i","length","item","backgroundColor","color","name","retrieveCPUS","processors","Proc_Name","Proc_Freq","Price","retrieveGPUS","graphicscards","Grap_Name","Grap_Memory","retrieveRAMS","rams","RAM_Name","RAM_Storage","retrieveStorages","storages","Stor_Name","Stor_Capacity","retrieveMotherboards","motherboards","Moth_Name","retrievePSUS","psus","Pow_Name","Pow_Capacity","render","mapStateToProps","continentReducer","cpuReducer","gpuReducer","ramReducer","storageReducer","motherboardReducer","psuReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,wBAAR,QAAuC,oBAAvC;AACA,OAAO,YAAP;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,OAAOC,UAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;;AACA,MAAMC,mBAAN,SAAkCZ,SAAlC,CAA2C;AACvCa,EAAAA,WAAW,GAAE;AACT;;AADS,SAqHbC,YArHa,GAqHGC,KAAD,IAAW;AACtB,UAAG,KAAKC,KAAL,CAAWC,cAAX,KAA8B,WAAjC,EAA6C;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;AACA,aAAKA,GAAL,GAAWL,KAAK,CAACM,MAAN,CAAaC,KAAxB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;AACA,YAAIG,KAAK,GAAGR,KAAK,CAACM,MAAN,CAAaG,EAAzB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,aAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,sBAAxB,EAA+C;AAC3CN,UAAAA,GAAG,EAAE,KAAKA;AADiC,SAA/C;AAGH;AAEF,KAjIU;;AAET,SAAKO,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAC,EADJ;AAETR,MAAAA,GAAG,EAAC,EAFK;AAGTS,MAAAA,GAAG,EAAC,EAHK;AAITC,MAAAA,GAAG,EAAC,EAJK;AAKTC,MAAAA,OAAO,EAAC,EALC;AAMTC,MAAAA,WAAW,EAAC,EANH;AAOTC,MAAAA,GAAG,EAAC,EAPK;AAQTC,MAAAA,UAAU,EAAC;AARF,KAAb;AAUA,SAAKd,GAAL,GAAW,EAAX;AAEH;;AACDe,EAAAA,iBAAiB,GAAE;AAEf,SAAKC,QAAL;AACH;;AACD,QAAMA,QAAN,GAAkB;AACd,QAAG,KAAKpB,KAAL,CAAWC,cAAX,KAA8B,YAAjC,EAA8C;AAC1C,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoB3B,iBAAiB,CAAC4B,kBAAlB,EAApB,CAArB;AACJ,WAAKC,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACI,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAW0B,UAA5B;AACA,UAAId,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACrB,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmFqB,IAAI,CAACG,IAAxF,CAAlB;AAEH;;AACD,WAAKR,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAZD,MAaK,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,WAAjC,EAA6C;AAC9C,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoBlC,WAAW,CAAC6C,YAAZ,EAApB,CAArB;AACA,WAAKT,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAWkC,UAA5B;AACA,UAAItB,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;;AACA,YAAGA,CAAC,KAAK,CAAT,EAAW;AACP,eAAKvB,GAAL,GAAYyB,IAAI,CAACM,SAAL,GAAiB,GAAjB,GAAsBN,IAAI,CAACO,SAAvC;AACH;;AACDxB,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACM,SAAL,GAAiB,GAAjB,GAAsBN,IAAI,CAACO,SAApG;AAA+G,UAAA,UAAU,EAAEP,IAAI,CAACQ,KAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwIR,IAAI,CAACM,SAA7I,QAA0JN,IAAI,CAACO,SAA/J,SAA6KP,IAAI,CAACQ,KAAlL,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAfI,MAgBA,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,eAAjC,EAAiD;AAClD,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoBjC,WAAW,CAACiD,YAAZ,EAApB,CAArB;AACA,WAAKd,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAWuC,aAA5B;AACA,UAAI3B,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACW,SAAL,GAAiBX,IAAI,CAACY,WAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6GZ,IAAI,CAACW,SAAlH,QAA+HX,IAAI,CAACY,WAApI,SAAoJZ,IAAI,CAACQ,KAAzJ,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAZI,MAaA,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,QAAjC,EAA0C;AAC3C,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoBhC,WAAW,CAACoD,YAAZ,EAApB,CAArB;AACA,WAAKlB,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAW2C,IAA5B;AACA,UAAI/B,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACe,QAAL,GAAgBf,IAAI,CAACgB,WAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4GhB,IAAI,CAACe,QAAjH,QAA6Hf,IAAI,CAACgB,WAAlI,SAAkJhB,IAAI,CAACQ,KAAvJ,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAZI,MAaA,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,SAAjC,EAA2C;AAC5C,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoB/B,eAAe,CAACuD,gBAAhB,EAApB,CAArB;AACA,WAAKtB,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAW+C,QAA5B;AACA,UAAInC,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACmB,SAAL,GAAiBnB,IAAI,CAACoB,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+GpB,IAAI,CAACmB,SAApH,QAAiInB,IAAI,CAACoB,aAAtI,SAAwJpB,IAAI,CAACQ,KAA7J,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAZI,MAaA,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,aAAjC,EAA+C;AAChD,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoB9B,mBAAmB,CAAC0D,oBAApB,EAApB,CAArB;AACA,WAAK1B,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAWmD,YAA5B;AACA,UAAIvC,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAACuB,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0FvB,IAAI,CAACuB,SAA/F,SAA6GvB,IAAI,CAACQ,KAAlH,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH,KAZI,MAaA,IAAG,KAAKZ,KAAL,CAAWC,cAAX,KAA8B,cAAjC,EAAgD;AACjD,UAAIoB,QAAQ,GAAG,MAAM,KAAKrB,KAAL,CAAWsB,QAAX,CAAoB7B,WAAW,CAAC4D,YAAZ,EAApB,CAArB;AACA,WAAK7B,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACA,UAAII,UAAU,GAAG,KAAKzB,KAAL,CAAWsD,IAA5B;AACA,UAAI1C,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;AACAf,QAAAA,YAAY,CAACF,IAAb,eAAkB;AAAQ,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC,OAAjB;AAAyBC,YAAAA,KAAK,EAAC;AAA/B,WAAf;AAA0D,UAAA,GAAG,EAAEJ,CAA/D;AAAkE,UAAA,KAAK,EAAEE,IAAI,CAAC0B,QAAL,GAAgB1B,IAAI,CAAC2B,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6G3B,IAAI,CAAC0B,QAAlH,QAA8H1B,IAAI,CAAC2B,YAAnI,SAAoJ3B,IAAI,CAACQ,KAAzJ,CAAlB;AAEH;;AACD,WAAKb,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACA;AAAd,OAAd;AACH;AAGJ;;AAeD6C,EAAAA,MAAM,GAAE;AAEJ,wBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,QAAQ,EAAE,KAAK3D,YAAvB;AAAqC,MAAA,KAAK,EAAE;AAACgC,QAAAA,eAAe,EAAC,SAAjB;AAA2BC,QAAAA,KAAK,EAAC;AAAjC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwF,KAAKpB,KAAL,CAAWC,YAAnG,CADA,CADA;AAKH;;AA3IsC;;AA6I3C,MAAM8C,eAAe,GAAG/C,KAAK,KAAI;AAC7Be,EAAAA,UAAU,EAAEf,KAAK,CAACgD,gBAAN,CAAuBjC,UADN;AAE7BQ,EAAAA,UAAU,EAAEvB,KAAK,CAACiD,UAAN,CAAiB1B,UAFA;AAG7BK,EAAAA,aAAa,EAAE5B,KAAK,CAACkD,UAAN,CAAiBtB,aAHH;AAI7BI,EAAAA,IAAI,EAAEhC,KAAK,CAACmD,UAAN,CAAiBnB,IAJM;AAK7BI,EAAAA,QAAQ,EAAEpC,KAAK,CAACoD,cAAN,CAAqBhB,QALF;AAM7BI,EAAAA,YAAY,EAAExC,KAAK,CAACqD,kBAAN,CAAyBb,YANV;AAO7BG,EAAAA,IAAI,EAAE3C,KAAK,CAACsD,UAAN,CAAiBX;AAPM,CAAJ,CAA7B;;AAUE,eAAe5D,OAAO,CAACgE,eAAD,CAAP,CAAyB9D,mBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {retrievePCConfigurations} from '../actions/actions';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport pcsActions  from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\nclass NDXSoftwareDropDown extends Component{\n    constructor(){\n        super();\n        this.state = {\n            DropDownComp:[],\n            CPU:'',\n            GPU:'',\n            RAM:'',\n            Storage:'',\n            Motherboard:'',\n            PSU:'',\n            totalprice:''\n        }\n        this.CPU = '';\n\n    }\n    componentDidMount(){\n        \n        this.loadInfo();\n    }\n    async loadInfo () {\n        if(this.props.collectionName === \"continents\"){\n            let response = await this.props.dispatch(continentsActions.retrieveContinents());\n        this.setState({response});\n            let data_array = this.props.continents;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.id}>{item.name}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"processor\"){\n            let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n            this.setState({response});\n            let data_array = this.props.processors;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.CPU = (item.Proc_Name + \" \"+ item.Proc_Freq);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Proc_Name + \" \"+ item.Proc_Freq} pricevalue={item.Price}>{item.Proc_Name}  {item.Proc_Freq}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"graphics_card\"){\n            let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n            this.setState({response});\n            let data_array = this.props.graphicscards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Grap_Name + item.Grap_Memory}>{item.Grap_Name}  {item.Grap_Memory}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"memory\"){\n            let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n            this.setState({response});\n            let data_array = this.props.rams;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.RAM_Name + item.RAM_Storage}>{item.RAM_Name}  {item.RAM_Storage}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"storage\"){\n            let response = await this.props.dispatch(storagesActions.retrieveStorages());\n            this.setState({response});\n            let data_array = this.props.storages;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Stor_Name + item.Stor_Capacity}>{item.Stor_Name}  {item.Stor_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n            this.setState({response});\n            let data_array = this.props.motherboards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Moth_Name}>{item.Moth_Name}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            let response = await this.props.dispatch(psusActions.retrievePSUS());\n            this.setState({response});\n            let data_array = this.props.psus;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i]; \n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Pow_Name + item.Pow_Capacity}>{item.Pow_Name}  {item.Pow_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n\n        \n    }\n    handleChange = (event) => {\n        if(this.props.collectionName === \"processor\"){\n            console.log(this.CPU);\n            this.CPU = event.target.value;\n            console.log(this.CPU);\n            let price = event.target.id;\n            console.log(price);\n            this.props.history.push(\"/addpcconfigurations\",{\n                CPU: this.CPU\n            })\n        }\n        \n      };\n\n    render(){\n\n        return(\n        <div className=\"form-group\">\n        <select onChange={this.handleChange} style={{backgroundColor:'#0eff00',color:'black'}}>{this.state.DropDownComp}</select>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    continents: state.continentReducer.continents,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n  })\n  \n  export default connect(mapStateToProps)(NDXSoftwareDropDown);\n"]},"metadata":{},"sourceType":"module"}