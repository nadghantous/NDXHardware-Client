{"ast":null,"code":"import axios from 'axios';\nconst hostApi = process.env.NODE_ENV === \"development\" ? \"http://localhost\" : \"http://localhost\";\nconst portApi = process.env.NODE_ENV === \"development\" ? 3002 : 3002;\nconst baseURLApi = `${hostApi}${portApi ? `:${portApi}` : ``}/api`;\n\nasync function retrieveCPUS() {\n  const url = `${baseURLApi}/users/retrieveCPUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveGPUS() {\n  const url = `${baseURLApi}/users/retrieveGPUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveRAMS() {\n  const url = `${baseURLApi}/users/retrieveRAMS`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveStorages() {\n  const url = `${baseURLApi}/users/retrieveStorages`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveMotherboards() {\n  const url = `${baseURLApi}/users/retrieveMotherboards`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrievePSUS() {\n  const url = `${baseURLApi}/users/retrievePSUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveUsers() {\n  const url = `${baseURLApi}/users/retrieveUsers`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveUser(id) {\n  const url = `${baseURLApi}/users/retrieveUser`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\nasync function createUser(data) {\n  const url = `${baseURLApi}/users/createUser`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function updateUser(data) {\n  const url = `${baseURLApi}/users/updateUser`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function deleteUser(item) {\n  const url = `${baseURLApi}/users/deleteUser`;\n  return await axios.post(url, item).then(response => response.data);\n}\n\nasync function findUser(data) {\n  const url = `${baseURLApi}/users/findUser`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nexport { retrieveUsers, retrieveUser, createUser, updateUser, deleteUser, findUser, retrieveCPUS, retrieveGPUS, retrieveRAMS, retrieveStorages, retrieveMotherboards, retrievePSUS };","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/actions/actions.js"],"names":["axios","hostApi","process","env","NODE_ENV","portApi","baseURLApi","retrieveCPUS","url","get","then","response","data","retrieveGPUS","retrieveRAMS","retrieveStorages","retrieveMotherboards","retrievePSUS","retrieveUsers","retrieveUser","id","post","createUser","updateUser","deleteUser","item","findUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst hostApi = process.env.NODE_ENV === \"development\" ? \"http://localhost\" : \"http://localhost\";\nconst portApi = process.env.NODE_ENV === \"development\" ? 3002 : 3002;\n\nconst baseURLApi = `${hostApi}${portApi ? `:${portApi}` : ``}/api`;\n\nasync function retrieveCPUS(){\n  const url = `${baseURLApi}/users/retrieveCPUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrieveGPUS(){\n  const url = `${baseURLApi}/users/retrieveGPUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrieveRAMS(){\n  const url = `${baseURLApi}/users/retrieveRAMS`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrieveStorages(){\n  const url = `${baseURLApi}/users/retrieveStorages`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrieveMotherboards(){\n  const url = `${baseURLApi}/users/retrieveMotherboards`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrievePSUS(){\n  const url = `${baseURLApi}/users/retrievePSUS`;\n  return await axios.get(url).then(response => response.data.data);\n}\nasync function retrieveUsers() {\n  const url = `${baseURLApi}/users/retrieveUsers`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function retrieveUser(id) {\n  const url = `${baseURLApi}/users/retrieveUser`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\nasync function createUser(data)\n{\n  const url = `${baseURLApi}/users/createUser`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function updateUser(data){\n    const url = `${baseURLApi}/users/updateUser`;\n    return await axios.post(url, data).then(response => response.data);\n}\nasync function deleteUser(item){\n    const url = `${baseURLApi}/users/deleteUser`;\n    return await axios.post(url,item).then(response => response.data);\n}\nasync function findUser(data){\n  const url = `${baseURLApi}/users/findUser`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\n\nexport {\n  retrieveUsers,\n  retrieveUser,\n  createUser,\n  updateUser,\n  deleteUser,\n  findUser,\n  retrieveCPUS,\n  retrieveGPUS,\n  retrieveRAMS,\n  retrieveStorages,\n  retrieveMotherboards,\n  retrievePSUS\n};"]},"metadata":{},"sourceType":"module"}