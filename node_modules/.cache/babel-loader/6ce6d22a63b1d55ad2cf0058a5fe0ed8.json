{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js\";\nimport React, { Component } from 'react';\nimport { retrievePCConfigurations } from '../actions/actions';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport pcsActions from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\n\nclass NDXSoftwareDropDown extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (this.props.collectionName === \"processor\") {\n        this.CPU = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.cpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.CPU);\n        console.log(this.cpuprice);\n        this.props.history.push(\"/addpcconfigurations\", {\n          CPU: this.CPU,\n          CPUPrice: this.cpuprice\n        });\n      } else if (this.props.collectionName === \"graphics_card\") {\n        this.GPU = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.gpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.GPU);\n        console.log(this.gpuprice);\n        this.props.history.push(\"/addpcconfigurations\", {\n          GPU: this.GPU,\n          GPUPrice: this.gpuprice\n        });\n      } else if (this.props.collectionName === \"memory\") {\n        this.RAM = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.ramprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.RAM);\n        console.log(this.ramprice);\n        this.props.history.push(\"/addpcconfigurations\", {\n          RAM: this.RAM,\n          RAMPrice: this.ramprice\n        });\n      } else if (this.props.collectionName === \"storage\") {\n        this.Storage = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.storageprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.Storage);\n        console.log(this.storageprice);\n        this.props.history.push(\"/addpcconfigurations\", {\n          Storage: this.Storage,\n          StoragePrice: this.storageprice\n        });\n      } else if (this.props.collectionName === \"motherboard\") {\n        this.Motherboard = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.mothprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.Motherboard);\n        console.log(this.mothprice);\n      } else if (this.props.collectionName === \"power_supply\") {\n        this.PSU = event.target.value;\n        const currentIndex = event.target.options.selectedIndex;\n        this.psuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(this.PSU);\n        console.log(this.psuprice);\n      }\n\n      this.props.history.push(\"/addpcconfigurations\", {\n        CPU: this.CPU,\n        CPUPrice: this.cpuprice,\n        GPU: this.GPU,\n        GPUPrice: this.gpuprice,\n        RAM: this.RAM,\n        RAMPrice: this.ramprice,\n        Storage: this.Storage,\n        StoragePrice: this.storageprice,\n        Motherboard: this.Motherboard,\n        MotherboardPrice: this.mothprice,\n        PSU: this.PSU,\n        PSUPrice: this.psuprice\n      });\n    };\n\n    this.state = {\n      DropDownComp: []\n    };\n    this.CPU = '';\n    this.cpuprice = 0;\n    this.GPU = '';\n    this.gpuprice = 0;\n    this.RAM = '';\n    this.ramprice = 0;\n    this.Storage = '';\n    this.storageprice = 0;\n    this.Motherboard = '';\n    this.mothprice = 0;\n    this.PSU = '';\n    this.psuprice = 0;\n  }\n\n  componentDidMount() {\n    this.loadInfo();\n  }\n\n  async loadInfo() {\n    if (this.props.collectionName === \"continents\") {\n      let response = await this.props.dispatch(continentsActions.retrieveContinents());\n      this.setState({\n        response\n      });\n      let data_array = this.props.continents;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 35\n          }\n        }, item.name));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"processor\") {\n      let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.processors;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.CPU = item.Proc_Name + \" \" + item.Proc_Freq;\n          this.cpuprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Proc_Name + \" \" + item.Proc_Freq,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 35\n          }\n        }, item.Proc_Name, \"  \", item.Proc_Freq, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"graphics_card\") {\n      let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.graphicscards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.GPU = item.Grap_Name + \" \" + item.Grap_Memory;\n          this.gpuprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.Grap_Name + \" \" + item.Grap_Memory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 35\n          }\n        }, item.Grap_Name, \"  \", item.Grap_Memory, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"memory\") {\n      let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.rams;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.RAM = item.RAM_Name + \" \" + item.RAM_Storage;\n          this.ramprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.RAM_Name + \" \" + item.RAM_Storage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 35\n          }\n        }, item.RAM_Name, \"  \", item.RAM_Storage, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"storage\") {\n      let response = await this.props.dispatch(storagesActions.retrieveStorages());\n      this.setState({\n        response\n      });\n      let data_array = this.props.storages;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.Storage = item.Stor_Name + \" \" + item.Stor_Capacity;\n          this.storageprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Stor_Name + item.Stor_Capacity,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 35\n          }\n        }, item.Stor_Name, \"  \", item.Stor_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"motherboard\") {\n      let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n      this.setState({\n        response\n      });\n      let data_array = this.props.motherboards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.Motherboard = item.Moth_Name;\n          this.mothprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Moth_Name,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 35\n          }\n        }, item.Moth_Name, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"power_supply\") {\n      let response = await this.props.dispatch(psusActions.retrievePSUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.psus;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          this.PSU = item.Pow_Name + \" \" + item.Pow_Capacity;\n          this.psuprice = item.Price;\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.Pow_Name + \" \" + item.Pow_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 35\n          }\n        }, item.Pow_Name, \"  \", item.Pow_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange.bind(null),\n      style: {\n        backgroundColor: '#0eff00',\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, this.state.DropDownComp));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  continents: state.continentReducer.continents,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus\n});\n\nexport default connect(mapStateToProps)(NDXSoftwareDropDown);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js"],"names":["React","Component","retrievePCConfigurations","Link","pcsActions","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","connect","continentsActions","NDXSoftwareDropDown","constructor","handleChange","event","props","collectionName","CPU","target","value","currentIndex","options","selectedIndex","cpuprice","state","DropDownComp","pricevalue","console","log","history","push","CPUPrice","GPU","gpuprice","GPUPrice","RAM","ramprice","RAMPrice","Storage","storageprice","StoragePrice","Motherboard","mothprice","PSU","psuprice","MotherboardPrice","PSUPrice","componentDidMount","loadInfo","response","dispatch","retrieveContinents","setState","data_array","continents","i","length","item","backgroundColor","color","id","name","retrieveCPUS","processors","Proc_Name","Proc_Freq","Price","retrieveGPUS","graphicscards","Grap_Name","Grap_Memory","retrieveRAMS","rams","RAM_Name","RAM_Storage","retrieveStorages","storages","Stor_Name","Stor_Capacity","retrieveMotherboards","motherboards","Moth_Name","retrievePSUS","psus","Pow_Name","Pow_Capacity","render","bind","mapStateToProps","continentReducer","cpuReducer","gpuReducer","ramReducer","storageReducer","motherboardReducer","psuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {retrievePCConfigurations} from '../actions/actions';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport pcsActions  from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\nclass NDXSoftwareDropDown extends Component{\n    constructor(){\n        super();\n        this.state = {\n            DropDownComp:[],\n        }\n        this.CPU = '';\n        this.cpuprice = 0;\n        this.GPU = '';\n        this.gpuprice = 0;\n        this.RAM = '';\n        this.ramprice = 0;\n        this.Storage = '';\n        this.storageprice = 0;\n        this.Motherboard = '';\n        this.mothprice = 0;\n        this.PSU = '';\n        this.psuprice = 0;\n\n\n\n    }\n    componentDidMount(){\n        \n        this.loadInfo();\n    }\n    async loadInfo () {\n        if(this.props.collectionName === \"continents\"){\n            let response = await this.props.dispatch(continentsActions.retrieveContinents());\n        this.setState({response});\n            let data_array = this.props.continents;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}}  key={i} value={item.id}>{item.name}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"processor\"){\n            let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n            this.setState({response});\n            let data_array = this.props.processors;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.CPU = (item.Proc_Name + \" \"+ item.Proc_Freq);\n                    this.cpuprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}}  key={i} value={item.Proc_Name + \" \"+ item.Proc_Freq} pricevalue={item.Price}>{item.Proc_Name}  {item.Proc_Freq}  ${item.Price}</option>);\n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"graphics_card\"){\n            let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n            this.setState({response});\n            let data_array = this.props.graphicscards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.GPU = (item.Grap_Name + \" \" + item.Grap_Memory);\n                    this.gpuprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.Grap_Name + \" \"+  item.Grap_Memory}>{item.Grap_Name}  {item.Grap_Memory}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"memory\"){\n            let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n            this.setState({response});\n            let data_array = this.props.rams;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.RAM = (item.RAM_Name + \" \"+ item.RAM_Storage);\n                    this.ramprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.RAM_Name + \" \"+ item.RAM_Storage}>{item.RAM_Name}  {item.RAM_Storage}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"storage\"){\n            let response = await this.props.dispatch(storagesActions.retrieveStorages());\n            this.setState({response});\n            let data_array = this.props.storages;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.Storage = (item.Stor_Name + \" \"+ item.Stor_Capacity);\n                    this.storageprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Stor_Name + item.Stor_Capacity} pricevalue={item.Price} >{item.Stor_Name}  {item.Stor_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n            this.setState({response});\n            let data_array = this.props.motherboards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    this.Motherboard = (item.Moth_Name);\n                    this.mothprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Moth_Name} pricevalue={item.Price} >{item.Moth_Name}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            let response = await this.props.dispatch(psusActions.retrievePSUS());\n            this.setState({response});\n            let data_array = this.props.psus;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i]; \n                if(i === 0){\n                    this.PSU = (item.Pow_Name + \" \" + item.Pow_Capacity);\n                    this.psuprice = item.Price;\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.Pow_Name + \" \"+ item.Pow_Capacity}>{item.Pow_Name}  {item.Pow_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n\n        \n    }\n    handleChange = (event) => {\n        if(this.props.collectionName === \"processor\"){\n            this.CPU = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.cpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.CPU);\n            console.log(this.cpuprice);\n            this.props.history.push(\"/addpcconfigurations\", {\n                CPU: this.CPU,\n                CPUPrice: this.cpuprice,\n            })\n        }\n       else if(this.props.collectionName === \"graphics_card\"){\n            this.GPU = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.gpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.GPU);\n            console.log(this.gpuprice);\n            this.props.history.push(\"/addpcconfigurations\", {\n                GPU: this.GPU,\n                GPUPrice: this.gpuprice,       \n            })\n        }\n        else if(this.props.collectionName === \"memory\"){\n            this.RAM = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.ramprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.RAM);\n            console.log(this.ramprice);\n            this.props.history.push(\"/addpcconfigurations\", {\n                RAM: this.RAM,\n                RAMPrice: this.ramprice,\n              \n            })\n        }\n        else if(this.props.collectionName === \"storage\"){\n            this.Storage = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.storageprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.Storage);\n            console.log(this.storageprice);\n            this.props.history.push(\"/addpcconfigurations\", {\n                Storage: this.Storage,\n                StoragePrice: this.storageprice,\n            })\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            this.Motherboard = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.mothprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.Motherboard);\n            console.log(this.mothprice);\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            this.PSU = event.target.value;\n            const currentIndex = event.target.options.selectedIndex;\n            this.psuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(this.PSU);\n            console.log(this.psuprice);\n        }\n        this.props.history.push(\"/addpcconfigurations\", {\n            CPU: this.CPU,\n            CPUPrice: this.cpuprice,\n            GPU: this.GPU,\n            GPUPrice: this.gpuprice,\n            RAM: this.RAM,\n            RAMPrice: this.ramprice,\n            Storage: this.Storage,\n            StoragePrice: this.storageprice,\n            Motherboard: this.Motherboard,\n            MotherboardPrice: this.mothprice,\n            PSU: this.PSU,\n            PSUPrice: this.psuprice\n        })\n      };\n\n    render(){\n\n        return(\n        <div className=\"form-group\">\n        <select onChange={this.handleChange.bind(null)} style={{backgroundColor:'#0eff00',color:'black'}}>{this.state.DropDownComp}</select>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    continents: state.continentReducer.continents,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n  })\n  \n  export default connect(mapStateToProps)(NDXSoftwareDropDown);\n"]},"metadata":{},"sourceType":"module"}