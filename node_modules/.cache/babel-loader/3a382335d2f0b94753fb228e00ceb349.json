{"ast":null,"code":"import { retrievePSUS, addPSU } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_PSUS_STARTED = 'GET_PSUS_STARTED';\nexport const GET_PSUS_SUCCESS = 'GET_PSUS_SUCCESS';\nexport const GET_PSUS_ERROR = 'GET_PSUS_ERROR';\nexport const ADD_PSU_STARTED = 'ADD_PSU_STARTED';\nexport const ADD_PSU_SUCCESS = 'ADD_PSU_SUCCESS';\nexport const ADD_PSU_ERROR = 'ADD_PSU_ERROR';\nconst psusActions = {\n  retrievePSUS: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_PSUS_STARTED\n      });\n      let response = await retrievePSUS();\n      dispatch({\n        type: GET_PSUS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING PSUS' + error);\n      dispatch({\n        type: GET_PSUS_ERROR\n      });\n    }\n  },\n  addPSU: data => async dispatch => {\n    try {\n      dispatch({\n        type: ADD_PSU_STARTED\n      });\n      await addPSU(data);\n      dispatch({\n        type: ADD_PSU_SUCCESS,\n        payload: {\n          message: 'PSU Added Succesfully !'\n        }\n      });\n      toast.success(\"PSU Successfully Added!\");\n    } catch (err) {\n      dispatch({\n        type: ADD_PSU_ERROR,\n        payload: {\n          message: 'failed to add PSU!'\n        }\n      });\n    }\n  }\n};\nexport default psusActions;","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/redux/actions/powersupplies.js"],"names":["retrievePSUS","addPSU","toast","GET_PSUS_STARTED","GET_PSUS_SUCCESS","GET_PSUS_ERROR","ADD_PSU_STARTED","ADD_PSU_SUCCESS","ADD_PSU_ERROR","psusActions","dispatch","type","response","payload","data","error","message","success","err"],"mappings":"AAAA,SAASA,YAAT,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,MAAMC,WAAW,GAAG;AAEhBT,EAAAA,YAAY,EAAE,MAAM,MAAOU,QAAP,IAAoB;AACtC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER;AADC,OAAD,CAAR;AAGA,UAAIS,QAAQ,GAAG,MAAMZ,YAAY,EAAjC;AACAU,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,gBADC;AAEPS,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAY,uBAAuBA,KAAnC;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGD;AACF,GApBe;AAqBhBJ,EAAAA,MAAM,EAAGa,IAAD,IAAU,MAAOJ,QAAP,IAAoB;AACpC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR;AAGA,YAAML,MAAM,CAACa,IAAD,CAAZ;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,eADC;AAEPM,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMAd,MAAAA,KAAK,CAACe,OAAN,CAAc,yBAAd;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,aADC;AAEPK,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAOD;AACF;AA3Ce,CAApB;AA8CE,eAAeP,WAAf","sourcesContent":["import { retrievePSUS,addPSU } from '../../actions/actions';\nimport { toast } from 'react-toastify'\n\n\nexport const GET_PSUS_STARTED = 'GET_PSUS_STARTED'\nexport const GET_PSUS_SUCCESS = 'GET_PSUS_SUCCESS'\nexport const GET_PSUS_ERROR = 'GET_PSUS_ERROR'\nexport const ADD_PSU_STARTED = 'ADD_PSU_STARTED'\nexport const ADD_PSU_SUCCESS = 'ADD_PSU_SUCCESS'\nexport const ADD_PSU_ERROR = 'ADD_PSU_ERROR'\nconst psusActions = {\n\n    retrievePSUS: () => async (dispatch) => {\n      try {\n        dispatch({\n          type: GET_PSUS_STARTED,\n        });\n        let response = await retrievePSUS()\n        dispatch({\n          type: GET_PSUS_SUCCESS,\n          payload: {\n            data: response,\n          },\n        });\n      } catch (error) {\n        toast.error('ERROR GETTING PSUS' + error)\n        dispatch({\n          type: GET_PSUS_ERROR,\n        });\n      }\n    },\n    addPSU: (data) => async (dispatch) => {\n      try {\n        dispatch({\n          type: ADD_PSU_STARTED,\n        });\n        await addPSU(data);\n        dispatch({\n          type: ADD_PSU_SUCCESS,\n          payload: {\n            message: 'PSU Added Succesfully !',\n          }\n        });\n        toast.success(\"PSU Successfully Added!\");\n      } catch (err) {\n        dispatch({\n          type: ADD_PSU_ERROR,\n          payload: {\n            message: 'failed to add PSU!',\n          }\n        })\n       \n      }\n    }\n  };\n  \n  export default psusActions;"]},"metadata":{},"sourceType":"module"}