{"ast":null,"code":"import { retrieveMotherboards } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_MOTHERBOARDS_STARTED = 'GET_MOTHERBOARDS_STARTED';\nexport const GET_MOTHERBOARDS_SUCCESS = 'GET_MOTHERBOARDS_SUCCESS';\nexport const GET_MOTHERBOARDS_ERROR = 'GET_MOTHERBOARDS_ERROR';\nconst motherboardsActions = {\n  retrieveMotherboards: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_MOTHERBOARDS_STARTED\n      });\n      let response = await retrieveMotherboards();\n      dispatch({\n        type: GET_MOTHERBOARDS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING MOTHERBOARDS' + error);\n      dispatch({\n        type: GET_MOTHERBOARDS_ERROR\n      });\n    }\n  }\n};\nexport default motherboardsActions;","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/redux/actions/motherboards.js"],"names":["retrieveMotherboards","toast","GET_MOTHERBOARDS_STARTED","GET_MOTHERBOARDS_SUCCESS","GET_MOTHERBOARDS_ERROR","motherboardsActions","dispatch","type","response","payload","data","error"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,uBAArC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,MAAMC,mBAAmB,GAAG;AAExBL,EAAAA,oBAAoB,EAAE,MAAM,MAAOM,QAAP,IAAoB;AAC9C,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR;AAGA,UAAIM,QAAQ,GAAG,MAAMR,oBAAoB,EAAzC;AACAM,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,wBADC;AAEPM,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdV,MAAAA,KAAK,CAACU,KAAN,CAAY,+BAA+BA,KAA3C;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH;AADC,OAAD,CAAR;AAGD;AACF;AApBuB,CAA5B;AAuBE,eAAeC,mBAAf","sourcesContent":["import { retrieveMotherboards } from '../../actions/actions';\nimport { toast } from 'react-toastify'\n\n\nexport const GET_MOTHERBOARDS_STARTED = 'GET_MOTHERBOARDS_STARTED'\nexport const GET_MOTHERBOARDS_SUCCESS = 'GET_MOTHERBOARDS_SUCCESS'\nexport const GET_MOTHERBOARDS_ERROR = 'GET_MOTHERBOARDS_ERROR'\n\nconst motherboardsActions = {\n\n    retrieveMotherboards: () => async (dispatch) => {\n      try {\n        dispatch({\n          type: GET_MOTHERBOARDS_STARTED,\n        });\n        let response = await retrieveMotherboards()\n        dispatch({\n          type: GET_MOTHERBOARDS_SUCCESS,\n          payload: {\n            data: response,\n          },\n        });\n      } catch (error) {\n        toast.error('ERROR GETTING MOTHERBOARDS' + error)\n        dispatch({\n          type: GET_MOTHERBOARDS_ERROR,\n        });\n      }\n    },\n  };\n  \n  export default motherboardsActions;"]},"metadata":{},"sourceType":"module"}