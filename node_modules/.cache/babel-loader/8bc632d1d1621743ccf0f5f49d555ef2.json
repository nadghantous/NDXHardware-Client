{"ast":null,"code":"import { retrieveAdmins, createAdmin } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport const GET_ADMINS_STARTED = 'GET_ADMINS_STARTED';\nexport const GET_ADMINS_SUCCESS = 'GET_ADMINS_SUCCESS';\nexport const GET_ADMINS_ERROR = 'GET_ADMINS_ERROR';\nexport const CREATE_ADMIN_STARTED = 'CREATE_ADMIN_STARTED';\nexport const CREATE_ADMIN_SUCCESS = 'CREATE_ADMIN_SUCCESS';\nexport const CREATE_ADMIN_ERROR = 'CREATE_ADMIN_ERROR';\ntoast.configure();\nconst adminsActions = {\n  retrieveAdmins: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_ADMINS_STARTED\n      });\n      let response = await retrieveAdmins();\n      dispatch({\n        type: GET_ADMINS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING ADMINS' + error);\n      dispatch({\n        type: GET_ADMINS_ERROR\n      });\n    }\n  },\n  createAdmin: data => async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_ADMIN_STARTED\n      });\n      await createAdmin(data);\n      dispatch({\n        type: CREATE_ADMIN_SUCCESS,\n        payload: {\n          message: 'Admin Account Created Succesfully !'\n        }\n      });\n      toast.success(\"Admin Account Successfully Created!\");\n    } catch (err) {\n      dispatch({\n        type: CREATE_ADMIN_ERROR,\n        payload: {\n          message: 'failed to create admin account!'\n        }\n      });\n    }\n  }\n};\nexport default adminsActions;","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/redux/actions/admins.js"],"names":["retrieveAdmins","createAdmin","toast","GET_ADMINS_STARTED","GET_ADMINS_SUCCESS","GET_ADMINS_ERROR","CREATE_ADMIN_STARTED","CREATE_ADMIN_SUCCESS","CREATE_ADMIN_ERROR","configure","adminsActions","dispatch","type","response","payload","data","error","message","success","err"],"mappings":"AAAA,SAASA,cAAT,EAAwBC,WAAxB,QAA2C,uBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEPN,KAAK,CAACO,SAAN;AAEA,MAAMC,aAAa,GAAG;AAEpBV,EAAAA,cAAc,EAAE,MAAM,MAAOW,QAAP,IAAoB;AACxC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET;AADC,OAAD,CAAR;AAGA,UAAIU,QAAQ,GAAG,MAAMb,cAAc,EAAnC;AACAW,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,kBADC;AAEPU,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdd,MAAAA,KAAK,CAACc,KAAN,CAAY,yBAAyBA,KAArC;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP;AADC,OAAD,CAAR;AAGD;AACF,GApBmB;AAqBpBJ,EAAAA,WAAW,EAAGc,IAAD,IAAU,MAAOJ,QAAP,IAAoB;AACzC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGA,YAAML,WAAW,CAACc,IAAD,CAAjB;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,oBADC;AAEPO,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMAf,MAAAA,KAAK,CAACgB,OAAN,CAAc,qCAAd;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,kBADC;AAEPM,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAOD;AACF;AA3CmB,CAAtB;AA8CA,eAAeP,aAAf","sourcesContent":["import { retrieveAdmins,createAdmin } from '../../actions/actions';\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nexport const GET_ADMINS_STARTED = 'GET_ADMINS_STARTED'\nexport const GET_ADMINS_SUCCESS = 'GET_ADMINS_SUCCESS'\nexport const GET_ADMINS_ERROR = 'GET_ADMINS_ERROR'\n\nexport const CREATE_ADMIN_STARTED = 'CREATE_ADMIN_STARTED'\nexport const CREATE_ADMIN_SUCCESS = 'CREATE_ADMIN_SUCCESS'\nexport const CREATE_ADMIN_ERROR = 'CREATE_ADMIN_ERROR'\n\ntoast.configure();\n\nconst adminsActions = {\n\n  retrieveAdmins: () => async (dispatch) => {\n    try {\n      dispatch({\n        type: GET_ADMINS_STARTED,\n      });\n      let response = await retrieveAdmins()\n      dispatch({\n        type: GET_ADMINS_SUCCESS,\n        payload: {\n          data: response,\n        },\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING ADMINS' + error)\n      dispatch({\n        type: GET_ADMINS_ERROR,\n      });\n    }\n  },\n  createAdmin: (data) => async (dispatch) => {\n    try {\n      dispatch({\n        type: CREATE_ADMIN_STARTED,\n      });\n      await createAdmin(data);\n      dispatch({\n        type: CREATE_ADMIN_SUCCESS,\n        payload: {\n          message: 'Admin Account Created Succesfully !',\n        }\n      });\n      toast.success(\"Admin Account Successfully Created!\");\n    } catch (err) {\n      dispatch({\n        type: CREATE_ADMIN_ERROR,\n        payload: {\n          message: 'failed to create admin account!',\n        }\n      })\n     \n    }\n  }\n};\n\nexport default adminsActions;"]},"metadata":{},"sourceType":"module"}