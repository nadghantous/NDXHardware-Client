{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddGPU.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { createUser } from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport gpusActions from '../redux/actions/graphicscards';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddGPU extends Component {\n  constructor(props) {\n    super(props); // This binding is necessary to make `this` work in the callback\n\n    this.notifysuccess = () => {\n      toast.success(\"GPU succesfully added!\");\n    };\n\n    this.notifyerror = () => {\n      toast.error(\"Failed to add GPU!\");\n    };\n\n    this.handleGPUName = event => {\n      event.preventDefault();\n      this.setState({\n        Grap_Name: event.target.value\n      });\n    };\n\n    this.handleGPUMemory = event => {\n      event.preventDefault();\n      this.setState({\n        Grap_Memory: event.target.value\n      });\n    };\n\n    this.handlePrice = event => {\n      event.preventDefault();\n      this.setState({\n        Price: event.target.value\n      });\n    };\n\n    this.addGPUFunct = this.addGPUFunct.bind(this);\n    this.state = {\n      Grap_Name: '',\n      Grap_Memory: '',\n      Price: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(gpusActions.retrieveGPUS());\n    let counter = 1;\n    const contents = this.props.graphicscards.forEach((item, key) => {\n      counter = counter + 1;\n    });\n    console.log(counter);\n  }\n\n  async addGPUFunct(event) {\n    event.preventDefault();\n    let error = false;\n    let counter = 1;\n    const {\n      Grap_Name\n    } = this.state;\n    const {\n      Grap_Memory\n    } = this.state;\n    const {\n      Price\n    } = this.state;\n    let price = Math.round(Price * 100) / 100;\n    const contents = this.props.graphicscards.forEach((item, key) => {\n      if (item.Grap_Name.toLowerCase() === Grap_Name.toLowerCase()) {\n        error = true;\n      }\n\n      counter = counter + 1;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"text-center mb-3\",\n      className: \"Label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-sign-in-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 58\n      }\n    }), \" GPU Insertion\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"link\",\n      to: \"/adminhome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \" Go back to Main Menu\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      id: \"over\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"gpu.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Grap_Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Graphics Card Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.handleGPUName,\n      id: \"Grap_Name\",\n      name: \"Grap_Name\",\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Grap_Name : 'Graphics Card Name',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 260\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Grap_Memory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Graphics Card Memory Capacity:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"Grap_Memory\",\n      name: \"Grap_Memory\",\n      onChange: this.handleGPUMemory,\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Grap_Memory : 'Memory Size',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 259\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Graphics Card Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"Price\",\n      name: \"Price\",\n      onChange: this.handlePrice,\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Price : 'Price',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 232\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.addGPUFunct,\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Insert GPU\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addMessage: state.gpuReducer.addMessage,\n  didCreate: state.gpuReducer.didCreate,\n  graphicscards: state.gpuReducer.graphicscards\n});\n\nexport default connect(mapStateToProps)(AddGPU);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddGPU.js"],"names":["React","Component","Link","createUser","adminsActions","connect","toast","gpusActions","keys","AddGPU","constructor","props","notifysuccess","success","notifyerror","error","handleGPUName","event","preventDefault","setState","Grap_Name","target","value","handleGPUMemory","Grap_Memory","handlePrice","Price","addGPUFunct","bind","state","componentDidMount","dispatch","retrieveGPUS","counter","contents","graphicscards","forEach","item","key","console","log","price","Math","round","toLowerCase","render","location","undefined","mapStateToProps","addMessage","gpuReducer","didCreate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport {createUser} from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify'\nimport gpusActions from '../redux/actions/graphicscards';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddGPU extends Component{\n    constructor(props){\n        super(props);\n        // This binding is necessary to make `this` work in the callback\n        this.addGPUFunct = this.addGPUFunct.bind(this);\n        this.state = {Grap_Name: '', Grap_Memory: '', Price: ''};\n    }\n    componentDidMount(){\n         this.props.dispatch(gpusActions.retrieveGPUS());\n         let counter = 1;\n          const contents = this.props.graphicscards.forEach((item,key)=> {\n          counter = counter + 1;\n      });\n      console.log(counter);\n    }\n    notifysuccess = () => {\n      toast.success(\"GPU succesfully added!\");\n    }\n    notifyerror = () => {\n      toast.error(\"Failed to add GPU!\");\n    }\n  \n    handleGPUName = event => {\n      event.preventDefault();\n      this.setState({Grap_Name: event.target.value});\n    }\n    handleGPUMemory = event =>{\n        event.preventDefault();\n        this.setState({Grap_Memory: event.target.value});\n    }\n    handlePrice = event => {\n      event.preventDefault();\n      this.setState({Price: event.target.value});\n    }\n    async addGPUFunct(event){\n      \n      event.preventDefault();\n      let error = false;\n      let counter = 1;\n      \n      const {Grap_Name} = this.state;\n      const {Grap_Memory} = this.state;\n      const {Price} = this.state;\n      let price = Math.round(Price*100)/100;\n      const contents = this.props.graphicscards.forEach((item,key)=> {\n         if(item.Grap_Name.toLowerCase() === Grap_Name.toLowerCase()){\n           error = true;\n         }\n          counter = counter + 1;\n      });\n     \n     \n    }\n    render() {\n  \n      return (\n        <div className=\"container\">\n          <div className=\"col-lg-9 m-auto\">\n          <div className=\"card card-body\">\n          <h2 class=\"text-center mb-3\" className=\"Label\"><i class=\"fas fa-sign-in-alt\"></i> GPU Insertion\n            </h2>\n            <br></br>\n            <Link className=\"link\" to=\"/adminhome\"> Go back to Main Menu</Link>\n            <br></br>\n            <div className=\"form-group\" id=\"over\">\n            <img src=\"gpu.png\" ></img>\n            </div>\n            <div className=\"form-group \">\n              <label className=\"Label\" for=\"Grap_Name\">Graphics Card Name:</label>\n              <input className=\"form-control\"  type=\"text\" onChange={this.handleGPUName} id=\"Grap_Name\" name=\"Grap_Name\" placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Grap_Name : 'Graphics Card Name'} required  size=\"10\"/><br/>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"Label\" for=\"Grap_Memory\">Graphics Card Memory Capacity:</label>\n              <input className=\"form-control\" type=\"text\" id=\"Grap_Memory\" name=\"Grap_Memory\" onChange={this.handleGPUMemory} placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Grap_Memory: 'Memory Size'} required  size=\"10\"/><br/>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"Label\" for=\"Price\">Graphics Card Price:</label>\n              <input className=\"form-control\" type=\"text\" id=\"Price\" name=\"Price\" onChange={this.handlePrice} placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Price : 'Price'} required  size=\"10\"/><br/>\n            </div>\n          <br></br>\n          <br></br>\n          <button type=\"submit\" onClick={this.addGPUFunct} className=\"btn\">\n              Insert GPU\n            </button>\n          \n          </div>\n         </div>\n        </div>\n      );\n    }\n  }\n  const mapStateToProps = state => ({\n    addMessage: state.gpuReducer.addMessage,\n    didCreate: state.gpuReducer.didCreate,\n    graphicscards: state.gpuReducer.graphicscards,\n\n  })\n  \n  export default connect(mapStateToProps)(AddGPU);"]},"metadata":{},"sourceType":"module"}