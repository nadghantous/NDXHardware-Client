{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js\";\nimport React, { Component } from 'react';\nimport { retrievePCConfigurations } from '../actions/actions';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport pcsActions from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\n\nclass NDXSoftwareDropDown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      DropDownComp: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadInfo();\n  }\n\n  async loadInfo() {\n    if (this.props.collectionName === \"continents\") {\n      let response = await this.props.dispatch(continentsActions.retrieveContinents());\n      this.setState({\n        response\n      });\n      let data_array = this.props.continents;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 35\n          }\n        }, item.name));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"processor\") {\n      let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.processors;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: (item.Proc_Name, item.Proc_Freq),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 35\n          }\n        }, item.Proc_Name, \"  \", item.Proc_Freq, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"graphics_card\") {\n      let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.graphicscards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: (item.Grap_Name, item.Grap_Memory),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 35\n          }\n        }, item.Grap_Name, \"  \", item.Grap_Memory, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"memory\") {\n      let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.rams;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: (item.RAM_Name, item.RAM_Storage),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 35\n          }\n        }, item.RAM_Name, \"  \", item.RAM_Storage, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"storage\") {\n      let response = await this.props.dispatch(storagesActions.retrieveStorages());\n      this.setState({\n        response\n      });\n      let data_array = this.props.storages;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: (item.Stor_Name, item.Stor_Capacity),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 35\n          }\n        }, item.Stor_Name, \"  \", item.Stor_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"motherboard\") {\n      let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n      this.setState({\n        response\n      });\n      let data_array = this.props.motherboards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Moth_Name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 35\n          }\n        }, item.Moth_Name, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"power_supply\") {\n      let response = await this.props.dispatch(psusActions.retrievePSUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.psus;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: (item.Pow_Name, item.Pow_Capacity),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }\n        }, item.Pow_Name, \"  \", item.Pow_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        backgroundColor: '#0eff00',\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, this.state.DropDownComp));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  continents: state.continentReducer.continents,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus\n});\n\nexport default connect(mapStateToProps)(NDXSoftwareDropDown);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js"],"names":["React","Component","retrievePCConfigurations","Link","pcsActions","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","connect","continentsActions","NDXSoftwareDropDown","constructor","state","DropDownComp","componentDidMount","loadInfo","props","collectionName","response","dispatch","retrieveContinents","setState","data_array","continents","console","log","i","length","item","push","backgroundColor","color","id","name","retrieveCPUS","processors","Proc_Name","Proc_Freq","Price","retrieveGPUS","graphicscards","Grap_Name","Grap_Memory","retrieveRAMS","rams","RAM_Name","RAM_Storage","retrieveStorages","storages","Stor_Name","Stor_Capacity","retrieveMotherboards","motherboards","Moth_Name","retrievePSUS","psus","Pow_Name","Pow_Capacity","render","mapStateToProps","continentReducer","cpuReducer","gpuReducer","ramReducer","storageReducer","motherboardReducer","psuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {retrievePCConfigurations} from '../actions/actions';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport pcsActions  from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\nclass NDXSoftwareDropDown extends Component{\n    constructor(){\n        super();\n        this.state = {\n            DropDownComp:[],\n        }\n\n    }\n    componentDidMount(){\n        \n        this.loadInfo();\n    }\n    async loadInfo () {\n        if(this.props.collectionName === \"continents\"){\n            let response = await this.props.dispatch(continentsActions.retrieveContinents());\n        this.setState({response});\n            let data_array = this.props.continents;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.id}>{item.name}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"processor\"){\n            let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n        this.setState({response});\n            let data_array = this.props.processors;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Proc_Name, item.Proc_Freq}>{item.Proc_Name}  {item.Proc_Freq}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"graphics_card\"){\n            let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n        this.setState({response});\n            let data_array = this.props.graphicscards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Grap_Name, item.Grap_Memory}>{item.Grap_Name}  {item.Grap_Memory}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"memory\"){\n            let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n        this.setState({response});\n            let data_array = this.props.rams;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.RAM_Name, item.RAM_Storage}>{item.RAM_Name}  {item.RAM_Storage}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"storage\"){\n            let response = await this.props.dispatch(storagesActions.retrieveStorages());\n        this.setState({response});\n            let data_array = this.props.storages;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Stor_Name, item.Stor_Capacity}>{item.Stor_Name}  {item.Stor_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n        this.setState({response});\n            let data_array = this.props.motherboards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Moth_Name}>{item.Moth_Name}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            let response = await this.props.dispatch(psusActions.retrievePSUS());\n        this.setState({response});\n            let data_array = this.props.psus;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Pow_Name, item.Pow_Capacity}>{item.Pow_Name}  {item.Pow_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n\n        \n    }\n\n    render(){\n        return(\n        <div className=\"form-group\">\n        <select style={{backgroundColor:'#0eff00',color:'black'}}>{this.state.DropDownComp}</select>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    continents: state.continentReducer.continents,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n  })\n  \n  export default connect(mapStateToProps)(NDXSoftwareDropDown);\n"]},"metadata":{},"sourceType":"module"}