{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddCPU.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { createUser } from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport cpusActions from '../redux/actions/processors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddCPU extends Component {\n  constructor(props) {\n    super(props); // This binding is necessary to make `this` work in the callback\n\n    this.notifysuccess = () => {\n      toast.success(\"CPU succesfully added!\");\n    };\n\n    this.notifyerror = () => {\n      toast.error(\"Failed to add CPU!\");\n    };\n\n    this.handleCPUName = event => {\n      event.preventDefault();\n      this.setState({\n        Proc_Name: event.target.value\n      });\n    };\n\n    this.handleCPUFreq = event => {\n      event.preventDefault();\n      this.setState({\n        Proc_Freq: event.target.value\n      });\n    };\n\n    this.handlePrice = event => {\n      event.preventDefault();\n      this.setState({\n        Price: event.target.value\n      });\n    };\n\n    this.addCPUFunct = this.addCPUFunct.bind(this);\n    this.state = {\n      Proc_Name: '',\n      Proc_Freq: '',\n      Price: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(cpusActions.retrieveCPUS());\n    let counter = 1;\n    const contents = this.props.processors.forEach((item, key) => {\n      counter = counter + 1;\n    });\n    console.log(counter);\n  }\n\n  async addCPUFunct(event) {\n    event.preventDefault();\n    let counter = 1;\n    const contents = this.props.processors.forEach((item, key) => {\n      counter = counter + 1;\n    });\n    const {\n      Proc_Name\n    } = this.state;\n    const {\n      Proc_Freq\n    } = this.state;\n    const {\n      Price\n    } = this.state;\n    let price = Math.round(Price * 100) / 100;\n    let cpu = {\n      Proc_ID: counter,\n      Proc_Name: Proc_Name,\n      Proc_Freq: Proc_Freq,\n      Price: price\n    };\n    let result = await this.props.dispatch(cpusActions.addCPU(cpu));\n    this.setState({\n      result\n    });\n    console.log(this.props.didCreate);\n\n    if (this.props.didCreate) {\n      alert(\"The CPU has been succesfully added!\");\n      this.props.history.push(\"/adminhome\");\n      window.location.reload(false);\n    } else {\n      this.notifyerror();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"text-center mb-3\",\n      className: \"Label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-sign-in-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 58\n      }\n    }), \" CPU Insertion\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"link\",\n      to: \"/adminhome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \" Go back to Main Menu\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      id: \"over\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"processor.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Proc_Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Processor Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.handleCPUName,\n      id: \"Proc_Name\",\n      name: \"Proc_Name\",\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Proc_Name : 'Processor Name',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 256\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Proc_Freq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Processor Frequency:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"Proc_Freq\",\n      name: \"Proc_Freq\",\n      onChange: this.handleCPUFreq,\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Proc_Freq : 'Processor Frequency',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 260\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Processor Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"Price\",\n      name: \"Price\",\n      onChange: this.handlePrice,\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Price : 'Price',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 232\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.addCPUFunct,\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Insert CPU\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addMessage: state.cpuReducer.addMessage,\n  didCreate: state.cpuReducer.didCreate,\n  processors: state.cpuReducer.processors\n});\n\nexport default connect(mapStateToProps)(AddCPU);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddCPU.js"],"names":["React","Component","Link","createUser","adminsActions","connect","toast","cpusActions","keys","AddCPU","constructor","props","notifysuccess","success","notifyerror","error","handleCPUName","event","preventDefault","setState","Proc_Name","target","value","handleCPUFreq","Proc_Freq","handlePrice","Price","addCPUFunct","bind","state","componentDidMount","dispatch","retrieveCPUS","counter","contents","processors","forEach","item","key","console","log","price","Math","round","cpu","Proc_ID","result","addCPU","didCreate","alert","history","push","window","location","reload","render","undefined","mapStateToProps","addMessage","cpuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport {createUser} from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify'\nimport cpusActions from '../redux/actions/processors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddCPU extends Component{\n    constructor(props){\n        super(props);\n        // This binding is necessary to make `this` work in the callback\n        this.addCPUFunct = this.addCPUFunct.bind(this);\n        this.state = {Proc_Name: '', Proc_Freq: '', Price: ''};\n    }\n    componentDidMount(){\n         this.props.dispatch(cpusActions.retrieveCPUS());\n         let counter = 1;\n          const contents = this.props.processors.forEach((item,key)=> {\n          counter = counter + 1;\n      });\n      console.log(counter);\n    }\n    notifysuccess = () => {\n      toast.success(\"CPU succesfully added!\");\n    }\n    notifyerror = () => {\n      toast.error(\"Failed to add CPU!\");\n    }\n  \n    handleCPUName = event => {\n      event.preventDefault();\n      this.setState({Proc_Name: event.target.value});\n    }\n    handleCPUFreq = event =>{\n        event.preventDefault();\n        this.setState({Proc_Freq: event.target.value});\n    }\n    handlePrice = event => {\n      event.preventDefault();\n      this.setState({Price: event.target.value});\n    }\n    async addCPUFunct(event){\n      \n      event.preventDefault();\n      let counter = 1;\n      const contents = this.props.processors.forEach((item,key)=> {\n          counter = counter + 1;\n      });\n      const {Proc_Name} = this.state;\n      const {Proc_Freq} = this.state;\n      const {Price} = this.state;\n      let price = Math.round(Price*100)/100;\n  \n      let cpu = {\n        Proc_ID: counter,\n        Proc_Name: Proc_Name,\n        Proc_Freq: Proc_Freq,\n        Price: price,\n      }\n      let result = await this.props.dispatch(cpusActions.addCPU(cpu));\n      this.setState({result});\n      console.log(this.props.didCreate);\n      if (this.props.didCreate) {\n        alert(\"The CPU has been succesfully added!\");\n        this.props.history.push(\"/adminhome\");\n        window.location.reload(false);\n        \n      }\n      else {\n       this.notifyerror();\n      }\n    }\n    render() {\n  \n      return (\n        <div className=\"container\">\n          <div className=\"col-lg-9 m-auto\">\n          <div className=\"card card-body\">\n          <h2 class=\"text-center mb-3\" className=\"Label\"><i class=\"fas fa-sign-in-alt\"></i> CPU Insertion\n            </h2>\n            <br></br>\n            <Link className=\"link\" to=\"/adminhome\"> Go back to Main Menu</Link>\n            <br></br>\n            <div className=\"form-group\" id=\"over\">\n            <img src=\"processor.png\" ></img>\n            </div>\n            <div className=\"form-group \">\n              <label className=\"Label\" for=\"Proc_Name\">Processor Name:</label>\n              <input className=\"form-control\"  type=\"text\" onChange={this.handleCPUName} id=\"Proc_Name\" name=\"Proc_Name\" placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Proc_Name : 'Processor Name'} required  size=\"10\"/><br/>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"Label\" for=\"Proc_Freq\">Processor Frequency:</label>\n              <input className=\"form-control\" type=\"text\" id=\"Proc_Freq\" name=\"Proc_Freq\" onChange={this.handleCPUFreq} placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Proc_Freq : 'Processor Frequency'} required  size=\"10\"/><br/>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"Label\" for=\"Price\">Processor Price:</label>\n              <input className=\"form-control\" type=\"text\" id=\"Price\" name=\"Price\" onChange={this.handlePrice} placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Price : 'Price'} required  size=\"10\"/><br/>\n            </div>\n          <br></br>\n          <br></br>\n          <button type=\"submit\" onClick={this.addCPUFunct} className=\"btn\">\n              Insert CPU\n            </button>\n          \n          </div>\n         </div>\n        </div>\n      );\n    }\n  }\n  const mapStateToProps = state => ({\n    addMessage: state.cpuReducer.addMessage,\n    didCreate: state.cpuReducer.didCreate,\n    processors: state.cpuReducer.processors,\n\n  })\n  \n  export default connect(mapStateToProps)(AddCPU);"]},"metadata":{},"sourceType":"module"}