{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddPC.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { createUser } from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport pcsActions from '../redux/actions/desktops';\nimport 'react-toastify/dist/ReactToastify.css';\nimport NDXSoftwareDropDown from './NDXSoftwareDropDown';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddPC extends Component {\n  constructor(props) {\n    super(props); // This binding is necessary to make `this` work in the callback\n\n    this.notifysuccess = () => {\n      toast.success(\"PC Configuration succesfully added!\");\n    };\n\n    this.notifyerror = () => {\n      toast.error(\"Failed to add PC Configuration!\");\n    };\n\n    this.handlePCName = event => {\n      event.preventDefault();\n      this.setState({\n        Config_Name: event.target.value\n      });\n    };\n\n    this.addPCFunct = this.addPCFunct.bind(this);\n    this.state = {\n      Config_Name: ''\n    };\n    this.CPU = '';\n    this.totalprice = 0;\n  }\n\n  componentDidMount() {\n    this.props.dispatch(cpusActions.retrieveCPUS());\n    this.props.dispatch(gpusActions.retrieveGPUS());\n    this.props.dispatch(ramsActions.retrieveRAMS());\n    this.props.dispatch(storagesActions.retrieveStorages());\n    this.props.dispatch(motherboardsActions.retrieveMotherboards());\n    this.props.dispatch(psusActions.retrievePSUS());\n    this.props.dispatch(pcsActions.retrieveDesktops());\n  }\n\n  async addPCFunct(event) {\n    event.preventDefault();\n    let errormessage = \"\";\n    let didFind = false;\n    const {\n      Config_Name\n    } = this.state;\n    let pref_resolution = \"1440p\";\n    let pref_framerate = \"60 FPS\";\n    let category = \"\";\n    let cpu = localStorage.getItem('CPU');\n    let cpuprice = parseFloat(localStorage.getItem('cpuprice'));\n    let gpu = localStorage.getItem('GPU');\n    let gpuprice = parseFloat(localStorage.getItem('gpuprice'));\n    let ram = localStorage.getItem('RAM');\n    let ramprice = parseFloat(localStorage.getItem('ramprice'));\n    let storage = localStorage.getItem('Storage');\n    let storageprice = parseFloat(localStorage.getItem('storageprice'));\n    let motherboard = localStorage.getItem('Motherboard');\n    let mothprice = parseFloat(localStorage.getItem('motherboardprice'));\n    let psu = localStorage.getItem('PSU');\n    let psuprice = parseFloat(localStorage.getItem('psuprice'));\n    let cputype = cpu.substr(11, 9);\n    let gputype = gpu.substr(15, 9);\n    console.log(cputype);\n    console.log(gputype);\n    let totalprice = cpuprice + gpuprice + ramprice + storageprice + mothprice + psuprice;\n    totalprice = parseFloat(totalprice.toFixed(1));\n    console.log(totalprice);\n\n    switch (cputype) {\n      case \"i9-9900K \":\n      case \"i9-8950HK\":\n      case \"i7 9700K \":\n      case \"i7 8700K \":\n      case \"i5 9600K \":\n        pref_framerate = \"120 FPS\";\n        break;\n\n      case \"i7 7700K \":\n      case \"i7 6700K \":\n      case \"i5 8600K \":\n      case \"i5 7600K \":\n        pref_framerate = \"60 FPS\";\n        break;\n\n      case \"i5 6600K \":\n      case \"i3 8350K \":\n      case \"i3 7350K \":\n        pref_framerate = \"30 FPS\";\n        break;\n\n      default:\n        pref_framerate = \"60 FPS\";\n        break;\n    }\n\n    switch (gputype) {\n      case \"RTX 3090 \":\n      case \"RTX 3080 \":\n      case \"RTX 3070 \":\n      case \"RTX 2080T\":\n      case \"RTX 2080 \":\n        pref_resolution = \"4K\";\n        break;\n\n      case \"RTX 3060T \":\n      case \"RTX 3060 \":\n      case \"RTX 2070 \":\n      case \"GTX 1080T\":\n      case \"GTX 1080 \":\n      case \"GTX 1070 \":\n        pref_resolution = \"1440p\";\n        break;\n\n      case \"RTX 2060 \":\n      case \"GTX 1060 \":\n      case \"GTX 1050T\":\n      case \"GTX 1050 \":\n      case \"GTX 1660T\":\n      case \"GTX 1660 \":\n      case \"GTX 1650 \":\n        pref_resolution = \"1080p\";\n        break;\n\n      default:\n        pref_resolution = \"1440p\";\n        break;\n    }\n\n    if (totalprice >= 850) {\n      category = \"Gamer\";\n    } else if (totalprice < 850 && totalprice >= 650) {\n      category = \"Enterprise Use\";\n      pref_framerate = \"\";\n      pref_resolution = \"\";\n    } else {\n      category = \"Personal Use\";\n      pref_framerate = \"\";\n      pref_resolution = \"\";\n    }\n\n    console.log(pref_framerate);\n    console.log(pref_resolution);\n    console.log(category);\n    console.log(cpu);\n    console.log(cpuprice);\n    console.log(gpu);\n    console.log(gpuprice);\n    console.log(ram);\n    console.log(ramprice);\n    console.log(storage);\n    console.log(storageprice);\n    console.log(motherboard);\n    console.log(mothprice);\n    console.log(psu);\n    console.log(psuprice);\n    const contents = this.props.desktops.forEach((item, key) => {\n      if (item.Config_Name === Config_Name || item.totalprice === totalprice) {\n        if (item.Config_Name === Config_Name) {\n          didFind = true;\n          errormessage = \"Error, cannot insert a PC configuration that has the same name of another PC configuration\";\n        } else if (item.totalprice.toFixed(0) === totalprice.toFixed(0)) {\n          didFind = true;\n          errormessage = \"Error, cannot insert a PC configuration that has the same components of another PC configuration\";\n        }\n      }\n    });\n    console.log(didFind);\n\n    if (didFind) {\n      alert(errormessage);\n    } else {\n      let pc_configuration = {\n        Config_Name: Config_Name,\n        CPU: cpu,\n        GPU: gpu,\n        RAM: ram,\n        Storage: storage,\n        Motherboard: motherboard,\n        PSU: psu,\n        totalprice: totalprice,\n        Pref_Resolution: pref_resolution,\n        Pref_Framerate: pref_framerate,\n        Category: category\n      };\n      let result = await this.props.dispatch(pcsActions.addPCConfiguration(pc_configuration));\n      this.setState({\n        result\n      });\n      console.log(this.props.didCreate);\n\n      if (this.props.didCreate) {\n        alert(\"PC configuration successfully created!\");\n        this.props.history.push(\"/adminhome\");\n        window.location.reload(false);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"text-center mb-3\",\n      className: \"Label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-sign-in-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 58\n      }\n    }), \" PC Configuration Insertion\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"link\",\n      to: \"/adminhome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \" Go back to Main Menu\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      id: \"over\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"pc.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"Config_Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, \"PC Configuration Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.handlePCName,\n      id: \"Config_Name\",\n      name: \"Config_Name\",\n      placeholder: this.props.location.state !== undefined ? this.props.location.state.Config_Name : 'PC Configuration Name',\n      required: true,\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 268\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"cpu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Select A CPU:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"cpu\",\n      collectionName: \"processor\",\n      data: this.props.processors,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"gpu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \"Select A GPU:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"gpu\",\n      collectionName: \"graphics_card\",\n      data: this.props.graphicscards,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"ram\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"Select A RAM:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"ram\",\n      collectionName: \"memory\",\n      data: this.props.rams,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"storage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Select A Storage Device:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"storage\",\n      collectionName: \"storage\",\n      data: this.props.storages,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"motherboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"Select A Motherboard:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"motherboard\",\n      collectionName: \"motherboard\",\n      data: this.props.motherboards,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      for: \"psu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"Select A PSU:\")), /*#__PURE__*/React.createElement(NDXSoftwareDropDown, {\n      id: \"psu\",\n      collectionName: \"power_supply\",\n      data: this.props.psus,\n      location: this.props.location,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.addPCFunct,\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, \"Insert PC\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addMessage: state.pcReducer.addMessage,\n  didCreate: state.pcReducer.didCreate,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus,\n  desktops: state.pcReducer.desktops\n});\n\nexport default connect(mapStateToProps)(AddPC);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/AddPC.js"],"names":["React","Component","Link","createUser","adminsActions","connect","toast","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","pcsActions","NDXSoftwareDropDown","keys","AddPC","constructor","props","notifysuccess","success","notifyerror","error","handlePCName","event","preventDefault","setState","Config_Name","target","value","addPCFunct","bind","state","CPU","totalprice","componentDidMount","dispatch","retrieveCPUS","retrieveGPUS","retrieveRAMS","retrieveStorages","retrieveMotherboards","retrievePSUS","retrieveDesktops","errormessage","didFind","pref_resolution","pref_framerate","category","cpu","localStorage","getItem","cpuprice","parseFloat","gpu","gpuprice","ram","ramprice","storage","storageprice","motherboard","mothprice","psu","psuprice","cputype","substr","gputype","console","log","toFixed","contents","desktops","forEach","item","key","alert","pc_configuration","GPU","RAM","Storage","Motherboard","PSU","Pref_Resolution","Pref_Framerate","Category","result","addPCConfiguration","didCreate","history","push","window","location","reload","render","undefined","processors","graphicscards","rams","storages","motherboards","psus","mapStateToProps","addMessage","pcReducer","cpuReducer","gpuReducer","ramReducer","storageReducer","motherboardReducer","psuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport {createUser} from '../actions/actions';\nimport adminsActions from \"../redux/actions/admins\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify'\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport pcsActions from '../redux/actions/desktops';\nimport 'react-toastify/dist/ReactToastify.css';\nimport NDXSoftwareDropDown from './NDXSoftwareDropDown';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass AddPC extends Component{\n    constructor(props){\n        super(props);\n        // This binding is necessary to make `this` work in the callback\n        this.addPCFunct = this.addPCFunct.bind(this);\n        this.state = {Config_Name: ''};\n        this.CPU = '';\n        this.totalprice = 0;\n    }\n    componentDidMount(){\n      this.props.dispatch(cpusActions.retrieveCPUS());\n      this.props.dispatch(gpusActions.retrieveGPUS());\n      this.props.dispatch(ramsActions.retrieveRAMS());\n      this.props.dispatch(storagesActions.retrieveStorages());\n      this.props.dispatch(motherboardsActions.retrieveMotherboards());\n      this.props.dispatch(psusActions.retrievePSUS());\n      this.props.dispatch(pcsActions.retrieveDesktops());\n    }\n    notifysuccess = () => {\n      toast.success(\"PC Configuration succesfully added!\");\n    }\n    notifyerror = () => {\n      toast.error(\"Failed to add PC Configuration!\");\n    }\n  \n    handlePCName = event => {\n      event.preventDefault();\n      this.setState({Config_Name: event.target.value});\n    }\n    async addPCFunct(event){\n      \n      event.preventDefault();\n      let errormessage = \"\";\n      let didFind = false;\n      const {Config_Name} = this.state;\n      let pref_resolution = \"1440p\";\n      let pref_framerate = \"60 FPS\";\n      let category = \"\";\n      let cpu = localStorage.getItem('CPU');\n      let cpuprice = parseFloat(localStorage.getItem('cpuprice'));\n      let gpu = localStorage.getItem('GPU');\n      let gpuprice = parseFloat(localStorage.getItem('gpuprice'));\n      let ram = localStorage.getItem('RAM');\n      let ramprice = parseFloat(localStorage.getItem('ramprice'));\n      let storage = localStorage.getItem('Storage');\n      let storageprice = parseFloat(localStorage.getItem('storageprice'));\n      let motherboard = localStorage.getItem('Motherboard');\n      let mothprice = parseFloat(localStorage.getItem('motherboardprice'));\n      let psu = localStorage.getItem('PSU');\n      let psuprice = parseFloat(localStorage.getItem('psuprice'));\n      let cputype = cpu.substr(11,9);\n      let gputype = gpu.substr(15,9);\n      console.log(cputype);\n      console.log(gputype);\n      let totalprice = cpuprice + gpuprice + ramprice + storageprice + mothprice + psuprice;\n      totalprice = parseFloat(totalprice.toFixed(1));\n      console.log(totalprice);\n      switch(cputype){\n        case \"i9-9900K \": case \"i9-8950HK\": case \"i7 9700K \": case \"i7 8700K \": case \"i5 9600K \":\n          pref_framerate = \"120 FPS\";\n          break;\n        case \"i7 7700K \": case \"i7 6700K \": case \"i5 8600K \": case \"i5 7600K \":\n          pref_framerate = \"60 FPS\";\n          break;\n       case \"i5 6600K \": case \"i3 8350K \": case \"i3 7350K \":\n         pref_framerate = \"30 FPS\";\n         break;\n        default:\n          pref_framerate = \"60 FPS\";\n          break;\n      }\n      switch(gputype){\n        case \"RTX 3090 \": case \"RTX 3080 \": case \"RTX 3070 \": case \"RTX 2080T\": case \"RTX 2080 \": \n        pref_resolution = \"4K\";\n        break;\n        case \"RTX 3060T \": case \"RTX 3060 \": case \"RTX 2070 \": case \"GTX 1080T\": case \"GTX 1080 \": case \"GTX 1070 \":\n        pref_resolution = \"1440p\"\n        break;\n        case \"RTX 2060 \": case \"GTX 1060 \": case \"GTX 1050T\": case \"GTX 1050 \": case \"GTX 1660T\": case \"GTX 1660 \": case \"GTX 1650 \":\n          pref_resolution = \"1080p\";\n        break;\n        default:\n          pref_resolution = \"1440p\";\n          break;\n      }\n      if(totalprice >= 850){\n        category = \"Gamer\";\n      }\n      else if(totalprice < 850 && totalprice >= 650){\n        category = \"Enterprise Use\";\n        pref_framerate = \"\";\n        pref_resolution = \"\";\n      }\n      else {\n        category = \"Personal Use\";\n        pref_framerate = \"\";\n        pref_resolution = \"\";\n      }\n      \n      console.log(pref_framerate);\n      console.log(pref_resolution);\n      console.log(category);\n      console.log(cpu);\n      console.log(cpuprice);\n      console.log(gpu);\n      console.log(gpuprice);\n      console.log(ram);\n      console.log(ramprice);\n      console.log(storage);\n      console.log(storageprice);\n      console.log(motherboard);\n      console.log(mothprice);\n      console.log(psu);\n      console.log(psuprice);\n       \n      const contents = this.props.desktops.forEach((item,key)=> {\n        if(item.Config_Name === Config_Name || item.totalprice === totalprice){\n         \n          if(item.Config_Name === Config_Name){\n            didFind = true;\n            errormessage = \"Error, cannot insert a PC configuration that has the same name of another PC configuration\";\n          }\n          else if(item.totalprice.toFixed(0) === totalprice.toFixed(0)){\n            didFind = true;\n            errormessage = \"Error, cannot insert a PC configuration that has the same components of another PC configuration\";\n          }\n        }\n     });\n     console.log(didFind);\n     if(didFind){\n       alert(errormessage);\n     }\n     else{\n       let pc_configuration = {\n         Config_Name: Config_Name,\n         CPU: cpu,\n         GPU: gpu,\n         RAM: ram,\n         Storage: storage,\n         Motherboard: motherboard,\n         PSU: psu,\n         totalprice: totalprice,\n         Pref_Resolution: pref_resolution,\n         Pref_Framerate: pref_framerate,\n         Category: category\n       }\n       let result = await this.props.dispatch(pcsActions.addPCConfiguration(pc_configuration));\n       this.setState({result});\n       console.log(this.props.didCreate);\n       if (this.props.didCreate) {\n         alert(\"PC configuration successfully created!\");\n         this.props.history.push(\"/adminhome\");\n         window.location.reload(false);\n         \n       }\n\n    }\n  }\n    render() {\n  \n      return (\n        <div className=\"container\">\n          <div className=\"col-lg-9 m-auto\">\n          <div className=\"card card-body\">\n          <h2 class=\"text-center mb-3\" className=\"Label\"><i class=\"fas fa-sign-in-alt\"></i> PC Configuration Insertion\n            </h2>\n            <br></br>\n            <Link className=\"link\" to=\"/adminhome\"> Go back to Main Menu</Link>\n            <br></br>\n            <div className=\"form-group\" id=\"over\">\n            <img src=\"pc.png\" ></img>\n            </div>\n            <div className=\"form-group \">\n              <label className=\"Label\" for=\"Config_Name\">PC Configuration Name:</label>\n              <input className=\"form-control\"  type=\"text\" onChange={this.handlePCName} id=\"Config_Name\" name=\"Config_Name\" placeholder={(this.props.location.state !== undefined) ? this.props.location.state.Config_Name : 'PC Configuration Name'} required  size=\"10\"/><br/>\n            </div>\n            <div className=\"form-group\">\n            <label className=\"Label\" for=\"cpu\">Select A CPU:</label>\n          </div>\n          <NDXSoftwareDropDown id='cpu'  collectionName=\"processor\" data={this.props.processors} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <div className=\"form-group\">\n            <label className=\"Label\" for=\"gpu\">Select A GPU:</label>\n          </div>\n          <NDXSoftwareDropDown id='gpu' collectionName=\"graphics_card\" data={this.props.graphicscards} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <div className=\"form-group\">\n            <label className=\"Label\" for=\"ram\">Select A RAM:</label>\n          </div>\n          <NDXSoftwareDropDown id='ram' collectionName=\"memory\" data={this.props.rams} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <div className=\"form-group\">\n            <label className=\"Label\" for=\"storage\">Select A Storage Device:</label>\n          </div>\n          <NDXSoftwareDropDown id='storage' collectionName=\"storage\" data={this.props.storages} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <div className=\"form-group\">\n            <label className=\"Label\" for=\"motherboard\">Select A Motherboard:</label>\n          </div>\n          <NDXSoftwareDropDown id='motherboard' collectionName=\"motherboard\" data={this.props.motherboards} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <div className=\"form-group\">\n            <label className=\"Label\" for=\"psu\">Select A PSU:</label>\n          </div>\n          <NDXSoftwareDropDown id='psu' collectionName=\"power_supply\" data={this.props.psus} location={this.props.location} history={this.props.history}></NDXSoftwareDropDown>\n          <br></br>\n          <br></br>\n          <button type=\"submit\" onClick={this.addPCFunct} className=\"btn\">\n              Insert PC\n            </button>\n          <br></br>\n          <br></br>\n          </div>\n         </div>\n        </div>\n      );\n    }\n  }\n  const mapStateToProps = state => ({\n    addMessage: state.pcReducer.addMessage,\n    didCreate: state.pcReducer.didCreate,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n    desktops: state.pcReducer.desktops,\n  })\n  \n  export default connect(mapStateToProps)(AddPC);"]},"metadata":{},"sourceType":"module"}