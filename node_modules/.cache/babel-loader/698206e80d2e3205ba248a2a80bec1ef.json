{"ast":null,"code":"var _jsxFileName = \"/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js\";\nimport React, { Component } from 'react';\nimport { retrievePCConfigurations } from '../actions/actions';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport pcsActions from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\n\nclass NDXSoftwareDropDown extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (this.props.collectionName === \"processor\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let CPU = this.state.DropDownComp[currentIndex].props.value;\n        let cpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(CPU);\n        console.log(cpuprice);\n        localStorage.setItem('CPU', CPU);\n        localStorage.setItem('cpuprice', cpuprice);\n      }\n\n      if (this.props.collectionName === \"graphics_card\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let GPU = this.state.DropDownComp[currentIndex].props.value;\n        let gpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(GPU);\n        console.log(gpuprice);\n        localStorage.setItem('GPU', GPU);\n        localStorage.setItem('gpuprice', gpuprice);\n      }\n\n      if (this.props.collectionName === \"memory\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let RAM = this.state.DropDownComp[currentIndex].props.value;\n        let ramprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(RAM);\n        console.log(ramprice);\n        localStorage.setItem('RAM', RAM);\n        localStorage.setItem('ramprice', ramprice);\n      }\n\n      if (this.props.collectionName === \"storage\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let Storage = this.state.DropDownComp[currentIndex].props.value;\n        let storageprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(Storage);\n        console.log(storageprice);\n        localStorage.setItem('Storage', Storage);\n        localStorage.setItem('storageprice', storageprice);\n      }\n\n      if (this.props.collectionName === \"motherboard\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let Motherboard = this.state.DropDownComp[currentIndex].props.value;\n        let mothprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(Motherboard);\n        console.log(mothprice);\n        localStorage.setItem('Motherboard', Motherboard);\n        localStorage.setItem('motherboardprice', mothprice);\n      }\n\n      if (this.props.collectionName === \"power_supply\") {\n        const currentIndex = event.target.options.selectedIndex;\n        let PSU = this.state.DropDownComp[currentIndex].props.value;\n        let psuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n        console.log(PSU);\n        console.log(psuprice);\n        localStorage.setItem('PSU', PSU);\n        localStorage.setItem('psuprice', psuprice);\n      }\n    };\n\n    this.state = {\n      DropDownComp: [],\n      CPU: '',\n      cpuprice: 0,\n      GPU: '',\n      gpuprice: 0,\n      RAM: '',\n      ramprice: 0,\n      Storage: '',\n      storageprice: 0,\n      Motherboard: '',\n      mothprice: 0,\n      PSU: '',\n      psuprice: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadInfo();\n  }\n\n  async loadInfo() {\n    if (this.props.collectionName === \"continents\") {\n      let response = await this.props.dispatch(continentsActions.retrieveContinents());\n      this.setState({\n        response\n      });\n      let data_array = this.props.continents;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 35\n          }\n        }, item.name));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"processor\") {\n      let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.processors;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('CPU', item.Proc_Name + \" \" + item.Proc_Freq);\n          localStorage.setItem('cpuprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Proc_Name + \" \" + item.Proc_Freq,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 35\n          }\n        }, item.Proc_Name, \"  \", item.Proc_Freq, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"graphics_card\") {\n      let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.graphicscards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('GPU', item.Grap_Name + \" \" + item.Grap_Memory);\n          localStorage.setItem('gpuprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.Grap_Name + \" \" + item.Grap_Memory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }\n        }, item.Grap_Name, \"  \", item.Grap_Memory, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"memory\") {\n      let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.rams;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('RAM', item.RAM_Name + \" \" + item.RAM_Storage);\n          localStorage.setItem('ramprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.RAM_Name + \" \" + item.RAM_Storage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 35\n          }\n        }, item.RAM_Name, \"  \", item.RAM_Storage, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"storage\") {\n      let response = await this.props.dispatch(storagesActions.retrieveStorages());\n      this.setState({\n        response\n      });\n      let data_array = this.props.storages;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('Storage', item.Stor_Name + \" \" + item.Stor_Capacity);\n          localStorage.setItem('storageprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Stor_Name + item.Stor_Capacity,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 35\n          }\n        }, item.Stor_Name, \"  \", item.Stor_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"motherboard\") {\n      let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n      this.setState({\n        response\n      });\n      let data_array = this.props.motherboards;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('Motherboard', item.Moth_Name);\n          localStorage.setItem('motherboardprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          value: item.Moth_Name,\n          pricevalue: item.Price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 35\n          }\n        }, item.Moth_Name, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    } else if (this.props.collectionName === \"power_supply\") {\n      let response = await this.props.dispatch(psusActions.retrievePSUS());\n      this.setState({\n        response\n      });\n      let data_array = this.props.psus;\n      let DropDownComp = [];\n      console.log(data_array);\n\n      for (let i = 0; i < data_array.length; i++) {\n        let item = data_array[i];\n\n        if (i === 0) {\n          localStorage.setItem('PSU', item.Pow_Name + \" \" + item.Pow_Capacity);\n          localStorage.setItem('psuprice', item.Price);\n        }\n\n        DropDownComp.push( /*#__PURE__*/React.createElement(\"option\", {\n          style: {\n            backgroundColor: 'black',\n            color: '#0eff00'\n          },\n          key: i,\n          pricevalue: item.Price,\n          value: item.Pow_Name + \" \" + item.Pow_Capacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 35\n          }\n        }, item.Pow_Name, \"  \", item.Pow_Capacity, \"  $\", item.Price));\n      }\n\n      this.setState({\n        DropDownComp: DropDownComp\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange.bind(null),\n      style: {\n        backgroundColor: '#0eff00',\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, this.state.DropDownComp));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  continents: state.continentReducer.continents,\n  processors: state.cpuReducer.processors,\n  graphicscards: state.gpuReducer.graphicscards,\n  rams: state.ramReducer.rams,\n  storages: state.storageReducer.storages,\n  motherboards: state.motherboardReducer.motherboards,\n  psus: state.psuReducer.psus\n});\n\nexport default connect(mapStateToProps)(NDXSoftwareDropDown);","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/components/NDXSoftwareDropDown.js"],"names":["React","Component","retrievePCConfigurations","Link","pcsActions","cpusActions","gpusActions","ramsActions","storagesActions","motherboardsActions","psusActions","connect","continentsActions","NDXSoftwareDropDown","constructor","handleChange","event","props","collectionName","currentIndex","target","options","selectedIndex","CPU","state","DropDownComp","value","cpuprice","pricevalue","console","log","localStorage","setItem","GPU","gpuprice","RAM","ramprice","Storage","storageprice","Motherboard","mothprice","PSU","psuprice","componentDidMount","loadInfo","response","dispatch","retrieveContinents","setState","data_array","continents","i","length","item","push","backgroundColor","color","id","name","retrieveCPUS","processors","Proc_Name","Proc_Freq","Price","retrieveGPUS","graphicscards","Grap_Name","Grap_Memory","retrieveRAMS","rams","RAM_Name","RAM_Storage","retrieveStorages","storages","Stor_Name","Stor_Capacity","retrieveMotherboards","motherboards","Moth_Name","retrievePSUS","psus","Pow_Name","Pow_Capacity","render","bind","mapStateToProps","continentReducer","cpuReducer","gpuReducer","ramReducer","storageReducer","motherboardReducer","psuReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {retrievePCConfigurations} from '../actions/actions';\nimport '../App.css';\nimport {Link} from  'react-router-dom';\nimport pcsActions  from '../redux/actions/desktops';\nimport cpusActions from '../redux/actions/processors';\nimport gpusActions from '../redux/actions/graphicscards';\nimport ramsActions from '../redux/actions/rams';\nimport storagesActions from '../redux/actions/storages';\nimport motherboardsActions from '../redux/actions/motherboards';\nimport psusActions from '../redux/actions/powersupplies';\nimport { connect } from 'react-redux';\nimport continentsActions from '../redux/actions/continents';\nclass NDXSoftwareDropDown extends Component{\n    constructor(){\n        super();\n        this.state = {\n            DropDownComp:[],\n            CPU: '',\n            cpuprice: 0,\n            GPU: '',\n            gpuprice: 0,\n            RAM:'',\n            ramprice: 0,\n            Storage:'',\n            storageprice: 0,\n            Motherboard: '',\n            mothprice: 0,\n            PSU: '',\n            psuprice: 0,\n        }\n        \n\n\n\n    }\n    componentDidMount(){\n        \n        this.loadInfo();\n    }\n    async loadInfo () {\n        if(this.props.collectionName === \"continents\"){\n            let response = await this.props.dispatch(continentsActions.retrieveContinents());\n        this.setState({response});\n            let data_array = this.props.continents;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}}  key={i} value={item.id}>{item.name}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"processor\"){\n            let response = await this.props.dispatch(cpusActions.retrieveCPUS());\n            this.setState({response});\n            let data_array = this.props.processors;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    localStorage.setItem('CPU',item.Proc_Name + \" \"+ item.Proc_Freq);\n                    localStorage.setItem('cpuprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}}  key={i} value={item.Proc_Name + \" \"+ item.Proc_Freq} pricevalue={item.Price}>{item.Proc_Name}  {item.Proc_Freq}  ${item.Price}</option>);\n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"graphics_card\"){\n            let response = await this.props.dispatch(gpusActions.retrieveGPUS());\n            this.setState({response});\n            let data_array = this.props.graphicscards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    localStorage.setItem('GPU',item.Grap_Name + \" \" + item.Grap_Memory);\n                    localStorage.setItem('gpuprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.Grap_Name + \" \"+  item.Grap_Memory}>{item.Grap_Name}  {item.Grap_Memory}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"memory\"){\n            let response = await this.props.dispatch(ramsActions.retrieveRAMS());\n            this.setState({response});\n            let data_array = this.props.rams;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    localStorage.setItem('RAM',item.RAM_Name + \" \"+ item.RAM_Storage);\n                    localStorage.setItem('ramprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.RAM_Name + \" \"+ item.RAM_Storage}>{item.RAM_Name}  {item.RAM_Storage}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"storage\"){\n            let response = await this.props.dispatch(storagesActions.retrieveStorages());\n            this.setState({response});\n            let data_array = this.props.storages;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    localStorage.setItem('Storage',item.Stor_Name + \" \"+ item.Stor_Capacity);\n                    localStorage.setItem('storageprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Stor_Name + item.Stor_Capacity} pricevalue={item.Price} >{item.Stor_Name}  {item.Stor_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"motherboard\"){\n            let response = await this.props.dispatch(motherboardsActions.retrieveMotherboards());\n            this.setState({response});\n            let data_array = this.props.motherboards;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i];\n                if(i === 0){\n                    localStorage.setItem('Motherboard',item.Moth_Name);\n                    localStorage.setItem('motherboardprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} value={item.Moth_Name} pricevalue={item.Price} >{item.Moth_Name}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n        else if(this.props.collectionName === \"power_supply\"){\n            let response = await this.props.dispatch(psusActions.retrievePSUS());\n            this.setState({response});\n            let data_array = this.props.psus;\n            let DropDownComp = [];\n            console.log(data_array)\n            for(let i = 0; i < data_array.length; i++){\n                let item = data_array[i]; \n                if(i === 0){\n                    localStorage.setItem('PSU',item.Pow_Name + \" \" + item.Pow_Capacity);\n                    localStorage.setItem('psuprice',item.Price);\n                }\n                DropDownComp.push(<option style={{backgroundColor:'black',color:'#0eff00'}} key={i} pricevalue={item.Price} value={item.Pow_Name + \" \"+ item.Pow_Capacity}>{item.Pow_Name}  {item.Pow_Capacity}  ${item.Price}</option>);\n    \n            }\n            this.setState({DropDownComp:DropDownComp});\n        }\n\n        \n    }\n    handleChange = (event) => {\n        if(this.props.collectionName === \"processor\"){\n            const currentIndex = event.target.options.selectedIndex;\n          \n            let CPU = this.state.DropDownComp[currentIndex].props.value;\n            let cpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(CPU);\n            console.log(cpuprice);\n            localStorage.setItem('CPU',CPU);\n            localStorage.setItem('cpuprice',cpuprice);\n        }\n       if(this.props.collectionName === \"graphics_card\"){\n            const currentIndex = event.target.options.selectedIndex;\n            let GPU = this.state.DropDownComp[currentIndex].props.value;\n            let gpuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(GPU);\n            console.log(gpuprice);\n            localStorage.setItem('GPU',GPU);\n            localStorage.setItem('gpuprice',gpuprice);\n        }\n        if(this.props.collectionName === \"memory\"){\n            const currentIndex = event.target.options.selectedIndex;\n            let RAM = this.state.DropDownComp[currentIndex].props.value;\n            let ramprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(RAM);\n            console.log(ramprice);\n            localStorage.setItem('RAM',RAM);\n            localStorage.setItem('ramprice',ramprice);\n        }\n        if(this.props.collectionName === \"storage\"){\n            const currentIndex = event.target.options.selectedIndex;\n            let Storage = this.state.DropDownComp[currentIndex].props.value;\n            let storageprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(Storage);\n            console.log(storageprice);\n            localStorage.setItem('Storage',Storage);\n            localStorage.setItem('storageprice',storageprice);\n        }\n        if(this.props.collectionName === \"motherboard\"){\n            const currentIndex = event.target.options.selectedIndex;\n            let Motherboard = this.state.DropDownComp[currentIndex].props.value;\n            let mothprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(Motherboard);\n            console.log(mothprice);\n            localStorage.setItem('Motherboard',Motherboard);\n            localStorage.setItem('motherboardprice',mothprice);\n        }\n        if(this.props.collectionName === \"power_supply\"){\n            const currentIndex = event.target.options.selectedIndex;\n            let PSU = this.state.DropDownComp[currentIndex].props.value;\n            let psuprice = this.state.DropDownComp[currentIndex].props.pricevalue;\n            console.log(PSU);\n            console.log(psuprice);\n            localStorage.setItem('PSU',PSU);\n            localStorage.setItem('psuprice',psuprice);\n        }\n      };\n\n    render(){\n\n        return(\n        <div className=\"form-group\">\n        <select onChange={this.handleChange.bind(null)} style={{backgroundColor:'#0eff00',color:'black'}}>{this.state.DropDownComp}</select>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    continents: state.continentReducer.continents,\n    processors: state.cpuReducer.processors,\n    graphicscards: state.gpuReducer.graphicscards,\n    rams: state.ramReducer.rams,\n    storages: state.storageReducer.storages,\n    motherboards: state.motherboardReducer.motherboards,\n    psus: state.psuReducer.psus,\n  })\n  \n  export default connect(mapStateToProps)(NDXSoftwareDropDown);\n"]},"metadata":{},"sourceType":"module"}