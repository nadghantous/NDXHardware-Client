{"ast":null,"code":"import { retrieveMotherboards, addMotherboard } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_MOTHERBOARDS_STARTED = 'GET_MOTHERBOARDS_STARTED';\nexport const GET_MOTHERBOARDS_SUCCESS = 'GET_MOTHERBOARDS_SUCCESS';\nexport const GET_MOTHERBOARDS_ERROR = 'GET_MOTHERBOARDS_ERROR';\nexport const ADD_MOTHERBOARD_STARTED = 'ADD_MOTHERBOARD_STARTED';\nexport const ADD_MOTHERBOARD_SUCCESS = 'ADD_MOTHERBOARD_SUCCESS';\nexport const ADD_MOTHERBOARD_ERROR = 'ADD_MOTHERBOARD_ERROR';\nconst motherboardsActions = {\n  retrieveMotherboards: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_MOTHERBOARDS_STARTED\n      });\n      let response = await retrieveMotherboards();\n      dispatch({\n        type: GET_MOTHERBOARDS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING MOTHERBOARDS' + error);\n      dispatch({\n        type: GET_MOTHERBOARDS_ERROR\n      });\n    }\n  },\n  addMotherboard: data => async dispatch => {\n    try {\n      dispatch({\n        type: ADD_MOTHERBOARD_STARTED\n      });\n      await addMotherboard(data);\n      dispatch({\n        type: ADD_MOTHERBOARD_SUCCESS,\n        payload: {\n          message: 'Motherboard Added Succesfully !'\n        }\n      });\n      toast.success(\"Motherboard Successfully Added!\");\n    } catch (err) {\n      dispatch({\n        type: ADD_MOTHERBOARD_ERROR,\n        payload: {\n          message: 'failed to add Motherboard!'\n        }\n      });\n    }\n  }\n};\nexport default motherboardsActions;","map":{"version":3,"sources":["/home/nadghantous/Desktop/nadghantousprojects/react/csis-myapp-test/src/redux/actions/motherboards.js"],"names":["retrieveMotherboards","addMotherboard","toast","GET_MOTHERBOARDS_STARTED","GET_MOTHERBOARDS_SUCCESS","GET_MOTHERBOARDS_ERROR","ADD_MOTHERBOARD_STARTED","ADD_MOTHERBOARD_SUCCESS","ADD_MOTHERBOARD_ERROR","motherboardsActions","dispatch","type","response","payload","data","error","message","success","err"],"mappings":"AAAA,SAASA,oBAAT,EAA8BC,cAA9B,QAAoD,uBAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,MAAMC,mBAAmB,GAAG;AAExBT,EAAAA,oBAAoB,EAAE,MAAM,MAAOU,QAAP,IAAoB;AAC9C,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER;AADC,OAAD,CAAR;AAGA,UAAIS,QAAQ,GAAG,MAAMZ,oBAAoB,EAAzC;AACAU,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,wBADC;AAEPS,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAY,+BAA+BA,KAA3C;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGD;AACF,GApBuB;AAqBxBJ,EAAAA,cAAc,EAAGa,IAAD,IAAU,MAAOJ,QAAP,IAAoB;AAC5C,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR;AAGA,YAAML,cAAc,CAACa,IAAD,CAApB;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,uBADC;AAEPM,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMAd,MAAAA,KAAK,CAACe,OAAN,CAAc,iCAAd;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,qBADC;AAEPK,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAOD;AACF;AA3CuB,CAA5B;AA8CE,eAAeP,mBAAf","sourcesContent":["import { retrieveMotherboards,addMotherboard } from '../../actions/actions';\nimport { toast } from 'react-toastify'\n\n\nexport const GET_MOTHERBOARDS_STARTED = 'GET_MOTHERBOARDS_STARTED'\nexport const GET_MOTHERBOARDS_SUCCESS = 'GET_MOTHERBOARDS_SUCCESS'\nexport const GET_MOTHERBOARDS_ERROR = 'GET_MOTHERBOARDS_ERROR'\nexport const ADD_MOTHERBOARD_STARTED = 'ADD_MOTHERBOARD_STARTED'\nexport const ADD_MOTHERBOARD_SUCCESS = 'ADD_MOTHERBOARD_SUCCESS'\nexport const ADD_MOTHERBOARD_ERROR = 'ADD_MOTHERBOARD_ERROR'\n\nconst motherboardsActions = {\n\n    retrieveMotherboards: () => async (dispatch) => {\n      try {\n        dispatch({\n          type: GET_MOTHERBOARDS_STARTED,\n        });\n        let response = await retrieveMotherboards()\n        dispatch({\n          type: GET_MOTHERBOARDS_SUCCESS,\n          payload: {\n            data: response,\n          },\n        });\n      } catch (error) {\n        toast.error('ERROR GETTING MOTHERBOARDS' + error)\n        dispatch({\n          type: GET_MOTHERBOARDS_ERROR,\n        });\n      }\n    },\n    addMotherboard: (data) => async (dispatch) => {\n      try {\n        dispatch({\n          type: ADD_MOTHERBOARD_STARTED,\n        });\n        await addMotherboard(data);\n        dispatch({\n          type: ADD_MOTHERBOARD_SUCCESS,\n          payload: {\n            message: 'Motherboard Added Succesfully !',\n          }\n        });\n        toast.success(\"Motherboard Successfully Added!\");\n      } catch (err) {\n        dispatch({\n          type: ADD_MOTHERBOARD_ERROR,\n          payload: {\n            message: 'failed to add Motherboard!',\n          }\n        })\n       \n      }\n    }\n  };\n  \n  export default motherboardsActions;"]},"metadata":{},"sourceType":"module"}